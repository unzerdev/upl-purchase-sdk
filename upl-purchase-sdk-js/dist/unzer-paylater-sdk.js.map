{"version":3,"file":"unzer-paylater-sdk.js","sources":["../src/unzer-paylater/communication/Communicator.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/index.js","../src/unzer-paylater/exceptions/ApiException.js","../src/unzer-paylater/exceptions/ValidationException.js","../src/unzer-paylater/exceptions/AuthorizationException.js","../src/unzer-paylater/exceptions/ReferenceException.js","../src/unzer-paylater/exceptions/UnzerException.js","../src/unzer-paylater/util/ModelHelper.js","../src/unzer-paylater/model/OperationStatus.js","../src/unzer-paylater/model/OperationResult.js","../src/unzer-paylater/model/Currency.js","../src/unzer-paylater/model/Amount.js","../src/unzer-paylater/model/AchAccountType.js","../src/unzer-paylater/model/Ach.js","../src/unzer-paylater/model/Bacs.js","../src/unzer-paylater/model/Country.js","../src/unzer-paylater/model/Eft.js","../src/unzer-paylater/model/Sepa.js","../src/unzer-paylater/model/Account.js","../src/unzer-paylater/model/Address.js","../src/unzer-paylater/model/Company.js","../src/unzer-paylater/model/DeliveryAddress.js","../src/unzer-paylater/model/DeliveryType.js","../src/unzer-paylater/model/Language.js","../src/unzer-paylater/model/Occupation.js","../src/unzer-paylater/model/Person.js","../src/unzer-paylater/model/Consumer.js","../src/unzer-paylater/model/ConsumerVerification.js","../src/unzer-paylater/model/Document.js","../src/unzer-paylater/model/MerchantReference.js","../src/unzer-paylater/model/OperationInformation.js","../src/unzer-paylater/model/PaymentMethod.js","../src/unzer-paylater/model/DocumentType.js","../src/unzer-paylater/model/Contract.js","../src/unzer-paylater/model/Payment.js","../src/unzer-paylater/model/ProductType.js","../src/unzer-paylater/model/PaymentOption.js","../src/unzer-paylater/model/PaymentInformation.js","../src/unzer-paylater/model/PurchaseState.js","../src/unzer-paylater/model/PurchaseInformation.js","../src/unzer-paylater/model/PurchaseOperationResponse.js","../src/unzer-paylater/connection/BaseConnection.js","../src/unzer-paylater/connection/AxiosConnection.js","../src/unzer-paylater/util/ApiHelper.js","../src/unzer-paylater/api/PurchaseLifecycleApi.js","../src/unzer-paylater/model/MethodType.js","../src/unzer-paylater/model/AuthorizePurchaseRequest.js","../src/unzer-paylater/api/PurchaseAuthorizationApi.js","../src/unzer-paylater/api/LegalDocumentsApi.js","../src/unzer-paylater/model/LogisticsProvider.js","../src/unzer-paylater/model/DeliveryInformation.js","../src/unzer-paylater/logging/Logger.js","../src/unzer-paylater/logging/ConsoleLogger.js","../src/unzer-paylater/index.js"],"sourcesContent":["/**\r\n * @class Communicator\r\n */\r\nclass Communicator {\r\n    /**\r\n     *Creates an instance of Communicator.\r\n     * @memberof Communicator\r\n     * @param connection\r\n     */\r\n    constructor(connection) {\r\n        if (!connection) {\r\n            throw new Error(\"Instance of a connection must be provided\");\r\n        }\r\n\r\n        if (!(connection.request instanceof Function)) {\r\n            throw new Error(\"Connection instance must have 'request' method\");\r\n        }\r\n\r\n        this.connection = connection;\r\n    }\r\n\r\n    /**\r\n     * Execute without an AuthorizationHeader\r\n     * @param method \"GET\", \"POST\" or \"PUT\" http method to use\r\n     * @param uri path to request\r\n     * @param headerParams parameters to be sent in http headers\r\n     * @param bodyParam the body to send (javascript Object, converted to Json)\r\n     * @returns On success: a Promise with .data, .status and .headers. On error: an AxiosError\r\n     */\r\n    execute(method, uri, headerParams, bodyParam) {\r\n        return this.connection.request(method, uri, headerParams, bodyParam).then(({ data, status, headers }) => ({\r\n            data,\r\n            status,\r\n            headers,\r\n        }));\r\n    }\r\n}\r\n\r\nmodule.exports = Communicator;\r\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","module.exports = require('./lib/axios');","class ApiException extends Error {\r\n    constructor(responseStatus = null, operationResult = null, ...params) {\r\n        super(...params)\r\n        this.operationResult = operationResult;\r\n        this.responseStatus = responseStatus;\r\n    }\r\n\r\n    /**\r\n     * Returns the operation result for the call that resulted in a non-200 http return status.\r\n     *\r\n     * @return {OperationResult}\r\n     */\r\n    getOperationResult() {\r\n        return this.operationResult;\r\n    }\r\n\r\n    getResponseStatus() {\r\n        return this.responseStatus;\r\n    }\r\n}\r\n\r\nmodule.exports = ApiException;","const ApiException = require(\"./ApiException\");\r\n\r\nclass ValidationException extends ApiException {\r\n  constructor(...params) {\r\n    super(...params)\r\n    this.name = 'ValidationException'\r\n  }\r\n}\r\n\r\nmodule.exports = ValidationException;","const ApiException = require(\"./ApiException\");\r\n\r\nclass AuthorizationException extends ApiException {\r\n  constructor(...params) {\r\n    super(...params)\r\n    this.name = 'AuthorizationException'\r\n  }\r\n}\r\n\r\nmodule.exports = AuthorizationException;","const ApiException = require(\"./ApiException\");\r\n\r\nclass ReferenceException extends ApiException {\r\n  constructor(...params) {\r\n    super(...params)\r\n    this.name = 'ReferenceException'\r\n  }\r\n}\r\n\r\nmodule.exports = ReferenceException;","const ApiException = require(\"./ApiException\");\r\n\r\nclass UnzerException extends ApiException {\r\n  constructor(...params) {\r\n    super(...params)\r\n    this.name = 'UnzerException'\r\n  }\r\n}\r\n\r\nmodule.exports = UnzerException;","const ValidationException = require(\"../exceptions/ValidationException\")\r\n\r\nconst parseArray = function (data, type) {\r\n    // for array type like: ['String']\r\n    const itemType = type[0];\r\n\r\n    return data.map((item) => {\r\n        return ModelHelper.convertToType(item, itemType);\r\n    });\r\n};\r\n\r\nconst parseObject = function (data, type) {\r\n    let keyType, valueType;\r\n    for (const k in type) {\r\n        if (type.hasOwnProperty(k)) {\r\n            keyType = k;\r\n            valueType = type[k];\r\n            break;\r\n        }\r\n    }\r\n\r\n    const result = {};\r\n    for (const k in data) {\r\n        if (data.hasOwnProperty(k)) {\r\n            const key = ModelHelper.convertToType(k, keyType);\r\n            result[key] = ModelHelper.convertToType(data[k], valueType);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nconst parseDate = function (data) {\r\n    return new Date(data);\r\n};\r\n\r\nfunction validatePrimitiveOrObject(value, valueType) {\r\n    return typeof valueType === \"string\"\r\n        ? ModelHelper.validatePrimitive(value, valueType)\r\n        : ModelHelper.validateObject(value, valueType);\r\n}\r\n\r\nfunction formatDate(value) {\r\n    const month = `${value.getMonth() + 1}`.padStart(2, \"0\")\r\n    const day = `${value.getDate()}`.padStart(2, \"0\")\r\n    return `${value.getFullYear()}-${month}-${day}`;\r\n}\r\n\r\nclass ModelHelper {\r\n    /**\r\n     * Converts a value to the specified type.\r\n     * @param {(String|Object)} data The data to convert, as a string or object.\r\n     * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\r\n     * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\r\n     * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\r\n     * all properties on <code>data<code> will be converted to this type.\r\n     * @returns An instance of the specified type or null or undefined if data is null or undefined.\r\n     */\r\n    static convertToType(data, type) {\r\n        if (data === null || data === undefined) return data;\r\n\r\n        switch (type) {\r\n            case Boolean:\r\n                return Boolean(data);\r\n            case Number:\r\n                return parseFloat(data);\r\n            case String:\r\n                return String(data);\r\n            case Date:\r\n                return parseDate(String(data));\r\n            case Blob:\r\n                return data;\r\n            default:\r\n                if (type === Object) {\r\n                    // generic object, return directly\r\n                    return data;\r\n                } else if (typeof type.constructFromObject === \"function\") {\r\n                    // for models\r\n                    return type.constructFromObject(data);\r\n                } else if (Array.isArray(type)) {\r\n                    return parseArray(data, type);\r\n                } else if (typeof type === \"object\") {\r\n                    // for plain object type like: {'String': 'Integer'}\r\n                    return parseObject(data, type);\r\n                } else {\r\n                    // for unknown type, return the data directly\r\n                    return data;\r\n                }\r\n        }\r\n    }\r\n\r\n    static validatePrimitive(value, typeName) {\r\n        if (!value) return value;\r\n        if (typeof value === typeName || (value.constructor && value.constructor.name === typeName))\r\n            return value;\r\n        throw new ValidationException(`'${value}' (${typeof value}) should be a '${typeName}'.`);\r\n    }\r\n\r\n    static validateArray(value, valueType) {\r\n        if (!value) return value;\r\n        if (!Array.isArray(value))\r\n            throw new ValidationException(`'${value}' (${typeof value}) should be an 'Array'.`);\r\n        value.forEach((item) => {\r\n            validatePrimitiveOrObject(item, valueType);\r\n        })\r\n        return value;\r\n    }\r\n\r\n    static validateArrayEnum(value, valueType) {\r\n        if (!value) return value;\r\n        if (!Array.isArray(value))\r\n            throw new ValidationException(`'${value}' (${typeof value}) should be an 'Array'.`);\r\n        value.forEach((item) => {\r\n            this.validateEnum(item, valueType);\r\n        })\r\n        return value;\r\n    }\r\n\r\n    static validateMap(value, keyType, valueType) {\r\n        if (!value) return value;\r\n        if (typeof value !== \"object\")\r\n            throw new ValidationException(`'${value}' (${typeof value}) should be a 'Map' or an 'Object'.`);\r\n        Object.keys(value).forEach(function(key) {\r\n            validatePrimitiveOrObject(key, keyType);\r\n            validatePrimitiveOrObject(value[key], valueType);\r\n        });\r\n        return value\r\n    }\r\n\r\n    static validateEnum(value, enumType, enumTypeName) {\r\n        if (!value) return value;\r\n        if (enumType.hasOwnProperty(value))\r\n            return value\r\n        throw new ValidationException(`'${value}' (${typeof value}) should match a value defined in '${enumTypeName}'.`);\r\n    }\r\n\r\n    static validateObject(value, objectType) {\r\n        if (!value) return value;\r\n        if (value instanceof objectType)\r\n            return value;\r\n        if (value instanceof Object && objectType && typeof objectType.constructFromObject === \"function\")\r\n            return objectType.constructFromObject(value);\r\n        throw new ValidationException(`'${value}' (${typeof value}) should be of type '${objectType}'.`);\r\n    }\r\n\r\n    static validateDate(value) {\r\n        if (!value) return value;\r\n        if (value instanceof Date)\r\n            return formatDate(value);\r\n        if (typeof value === \"string\") {\r\n            const date = new Date(value);\r\n            if (!isNaN(date))\r\n                return formatDate(date);\r\n        }\r\n        throw new ValidationException(`'${value}' (${typeof value}) should be of type 'Date'.`);\r\n    }\r\n\r\n    static validateDateTime(value) {\r\n        if (!value) return value;\r\n        if (value instanceof Date)\r\n            return value.toISOString();\r\n        if (typeof value === \"string\") {\r\n            value = new Date(value);\r\n            if (!isNaN(value))\r\n                return value.toISOString();\r\n        }\r\n        throw new ValidationException(`'${value}' (${typeof value}) should be of type 'Date'.`);\r\n    }\r\n}\r\n\r\nmodule.exports = ModelHelper;\r\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\n/**\n * Status of the operation.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    OK: \"OK\",\n    NOK: \"NOK\",\n    ERROR: \"ERROR\",\n    PENDING: \"PENDING\",\n    UNKNOWN: \"UNKNOWN\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst OperationStatus = require(\"./OperationStatus\");\n\n/**\n * Describes the result of an operation performed on a purchase.\n */\nclass OperationResult {\n    /**\n     * Unique identifier of the operation performed.\n     * @returns { String }\n     */\n    getOperationId() {\n        return this.operationId;\n    }\n    /**\n     * Unique identifier of the operation performed.\n     * @param { String } operationId\n     */\n    setOperationId(operationId) {\n        this.operationId = ModelHelper.validatePrimitive(operationId, \"string\");\n    }\n    /**\n     * Unique identifier of the operation performed.\n     * @param { String } val\n     */\n    withOperationId(val) {\n        this.setOperationId(val);\n        return this;\n    }\n\n    /**\n     * @returns { OperationStatus }\n     */\n    getStatus() {\n        return this.status;\n    }\n    /**\n     * @param { OperationStatus } status\n     */\n    setStatus(status) {\n        this.status = ModelHelper.validateEnum(status, OperationStatus, \"OperationStatus\");\n    }\n    /**\n     * @param { OperationStatus } val\n     */\n    withStatus(val) {\n        this.setStatus(val);\n        return this;\n    }\n\n    /**\n     * Code:\n     * `0.0.0` - \"Operation performed sucessfully\"\n     * `0.0.1` - \"Duplicate request: Operation already performed sucessfully\"\n     * `1.0.0` - \"Operation performed sucessfully. Final result pending\"\n     * `2.0.0` - \"Operation permanently declined\"\n     * `2.1.0` - \"Operation declined (retryable)\"\n     * `2.1.1` - \"Customer has exceeded limit\"\n     * `3.0.0` - \"Missing field\"\n     * `3.1.0` - \"Invalid input data\"\n     * `4.0.0` - \"Incorrect workflow state\"\n     * `4.1.0` - \"Wrong purchase state\"\n     * `4.2.0` - \"Unknown reference\"\n     * `4.3.0` - \"Invalid product\"\n     * `4.4.0` - \"Duplicate request\"\n     * `4.5.0` - \"User not authorized\"\n     * `4.5.1` - \"User not authorized. Product inactive\"\n     * `5.0.0` - \"Internal error\"\n     * `5.1.0` - \"Processing service unavailable (retryable)\"\n     * `6.0.0` - \"Internal error: Operation result undefined\"\n     * @returns { String }\n     */\n    getStatusCode() {\n        return this.statusCode;\n    }\n    /**\n     * Code:\n     * `0.0.0` - \"Operation performed sucessfully\"\n     * `0.0.1` - \"Duplicate request: Operation already performed sucessfully\"\n     * `1.0.0` - \"Operation performed sucessfully. Final result pending\"\n     * `2.0.0` - \"Operation permanently declined\"\n     * `2.1.0` - \"Operation declined (retryable)\"\n     * `2.1.1` - \"Customer has exceeded limit\"\n     * `3.0.0` - \"Missing field\"\n     * `3.1.0` - \"Invalid input data\"\n     * `4.0.0` - \"Incorrect workflow state\"\n     * `4.1.0` - \"Wrong purchase state\"\n     * `4.2.0` - \"Unknown reference\"\n     * `4.3.0` - \"Invalid product\"\n     * `4.4.0` - \"Duplicate request\"\n     * `4.5.0` - \"User not authorized\"\n     * `4.5.1` - \"User not authorized. Product inactive\"\n     * `5.0.0` - \"Internal error\"\n     * `5.1.0` - \"Processing service unavailable (retryable)\"\n     * `6.0.0` - \"Internal error: Operation result undefined\"\n     * @param { String } statusCode\n     */\n    setStatusCode(statusCode) {\n        this.statusCode = ModelHelper.validatePrimitive(statusCode, \"string\");\n    }\n    /**\n     * Code:\n     * `0.0.0` - \"Operation performed sucessfully\"\n     * `0.0.1` - \"Duplicate request: Operation already performed sucessfully\"\n     * `1.0.0` - \"Operation performed sucessfully. Final result pending\"\n     * `2.0.0` - \"Operation permanently declined\"\n     * `2.1.0` - \"Operation declined (retryable)\"\n     * `2.1.1` - \"Customer has exceeded limit\"\n     * `3.0.0` - \"Missing field\"\n     * `3.1.0` - \"Invalid input data\"\n     * `4.0.0` - \"Incorrect workflow state\"\n     * `4.1.0` - \"Wrong purchase state\"\n     * `4.2.0` - \"Unknown reference\"\n     * `4.3.0` - \"Invalid product\"\n     * `4.4.0` - \"Duplicate request\"\n     * `4.5.0` - \"User not authorized\"\n     * `4.5.1` - \"User not authorized. Product inactive\"\n     * `5.0.0` - \"Internal error\"\n     * `5.1.0` - \"Processing service unavailable (retryable)\"\n     * `6.0.0` - \"Internal error: Operation result undefined\"\n     * @param { String } val\n     */\n    withStatusCode(val) {\n        this.setStatusCode(val);\n        return this;\n    }\n\n    /**\n     * A human-readable description giving additional information about the result status.\n     * @returns { String }\n     */\n    getStatusMessage() {\n        return this.statusMessage;\n    }\n    /**\n     * A human-readable description giving additional information about the result status.\n     * @param { String } statusMessage\n     */\n    setStatusMessage(statusMessage) {\n        this.statusMessage = ModelHelper.validatePrimitive(statusMessage, \"string\");\n    }\n    /**\n     * A human-readable description giving additional information about the result status.\n     * @param { String } val\n     */\n    withStatusMessage(val) {\n        this.setStatusMessage(val);\n        return this;\n    }\n\n    /**\n     * Timestamp when operation processing has started.\n     * @returns { Date }\n     */\n    getProcessingStart() {\n        return new Date(this.processingStart);\n    }\n    /**\n     * Timestamp when operation processing has started.\n     * @param { Date } processingStart\n     */\n    setProcessingStart(processingStart) {\n        this.processingStart = ModelHelper.validateDate(processingStart);\n    }\n    /**\n     * Timestamp when operation processing has started.\n     * @param { Date } val\n     */\n    withProcessingStart(val) {\n        this.setProcessingStart(val);\n        return this;\n    }\n\n    /**\n     * Timestamp when operation processing has finished.\n     * @returns { Date }\n     */\n    getProcessingEnd() {\n        return new Date(this.processingEnd);\n    }\n    /**\n     * Timestamp when operation processing has finished.\n     * @param { Date } processingEnd\n     */\n    setProcessingEnd(processingEnd) {\n        this.processingEnd = ModelHelper.validateDate(processingEnd);\n    }\n    /**\n     * Timestamp when operation processing has finished.\n     * @param { Date } val\n     */\n    withProcessingEnd(val) {\n        this.setProcessingEnd(val);\n        return this;\n    }\n\n    /**\n     * @returns { OperationResult }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new OperationResult()\n            .withOperationId(ModelHelper.convertToType(data[\"operationId\"], String))\n            .withStatus(ModelHelper.convertToType(data[\"status\"], OperationStatus))\n            .withStatusCode(ModelHelper.convertToType(data[\"statusCode\"], String))\n            .withStatusMessage(ModelHelper.convertToType(data[\"statusMessage\"], String))\n            .withProcessingStart(ModelHelper.convertToType(data[\"processingStart\"], Date))\n            .withProcessingEnd(ModelHelper.convertToType(data[\"processingEnd\"], Date));\n    }\n}\n\nmodule.exports = OperationResult;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    EUR: \"EUR\",\n    CHF: \"CHF\",\n    USD: \"USD\",\n    CAD: \"CAD\",\n    GBP: \"GBP\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Currency = require(\"./Currency\");\n\nclass Amount {\n    /**\n     * Constructor for all fields required by the object.\n     * @param { Number } amount\n     * @param { Currency } currency\n     */\n    constructor(amount, currency) {\n        this.amount = ModelHelper.validatePrimitive(amount, \"number\");\n        this.currency = ModelHelper.validateEnum(currency, Currency, \"Currency\");\n    }\n\n    /**\n     * Amount in cents.\n     * @returns { Number }\n     */\n    getAmount() {\n        return this.amount;\n    }\n    /**\n     * Amount in cents.\n     * @param { Number } amount\n     */\n    setAmount(amount) {\n        this.amount = ModelHelper.validatePrimitive(amount, \"number\");\n    }\n    /**\n     * Amount in cents.\n     * @param { Number } val\n     */\n    withAmount(val) {\n        this.setAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Currency }\n     */\n    getCurrency() {\n        return this.currency;\n    }\n    /**\n     * @param { Currency } currency\n     */\n    setCurrency(currency) {\n        this.currency = ModelHelper.validateEnum(currency, Currency, \"Currency\");\n    }\n    /**\n     * @param { Currency } val\n     */\n    withCurrency(val) {\n        this.setCurrency(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        const amount = ModelHelper.convertToType(data[\"amount\"], Number);\n        const currency = ModelHelper.convertToType(data[\"currency\"], Currency);\n        return new Amount(amount, currency);\n    }\n}\n\nmodule.exports = Amount;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    SAVINGS: \"SAVINGS\",\n    CHECKING: \"CHECKING\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst AchAccountType = require(\"./AchAccountType\");\n\nclass Ach {\n    /**\n     * @returns { String }\n     */\n    getAccountNumber() {\n        return this.accountNumber;\n    }\n    /**\n     * @param { String } accountNumber\n     */\n    setAccountNumber(accountNumber) {\n        this.accountNumber = ModelHelper.validatePrimitive(accountNumber, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withAccountNumber(val) {\n        this.setAccountNumber(val);\n        return this;\n    }\n\n    /**\n     * @returns { AchAccountType }\n     */\n    getAccountType() {\n        return this.accountType;\n    }\n    /**\n     * @param { AchAccountType } accountType\n     */\n    setAccountType(accountType) {\n        this.accountType = ModelHelper.validateEnum(accountType, AchAccountType, \"AchAccountType\");\n    }\n    /**\n     * @param { AchAccountType } val\n     */\n    withAccountType(val) {\n        this.setAccountType(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getRoutingNumber() {\n        return this.routingNumber;\n    }\n    /**\n     * @param { String } routingNumber\n     */\n    setRoutingNumber(routingNumber) {\n        this.routingNumber = ModelHelper.validatePrimitive(routingNumber, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withRoutingNumber(val) {\n        this.setRoutingNumber(val);\n        return this;\n    }\n\n    /**\n     * @returns { Ach }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Ach()\n            .withAccountNumber(ModelHelper.convertToType(data[\"accountNumber\"], String))\n            .withAccountType(ModelHelper.convertToType(data[\"accountType\"], AchAccountType))\n            .withRoutingNumber(ModelHelper.convertToType(data[\"routingNumber\"], String));\n    }\n}\n\nmodule.exports = Ach;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\n\nclass Bacs {\n    /**\n     * @returns { String }\n     */\n    getAccountNumber() {\n        return this.accountNumber;\n    }\n    /**\n     * @param { String } accountNumber\n     */\n    setAccountNumber(accountNumber) {\n        this.accountNumber = ModelHelper.validatePrimitive(accountNumber, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withAccountNumber(val) {\n        this.setAccountNumber(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getSortCode() {\n        return this.sortCode;\n    }\n    /**\n     * @param { String } sortCode\n     */\n    setSortCode(sortCode) {\n        this.sortCode = ModelHelper.validatePrimitive(sortCode, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withSortCode(val) {\n        this.setSortCode(val);\n        return this;\n    }\n\n    /**\n     * @returns { Bacs }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Bacs()\n            .withAccountNumber(ModelHelper.convertToType(data[\"accountNumber\"], String))\n            .withSortCode(ModelHelper.convertToType(data[\"sortCode\"], String));\n    }\n}\n\nmodule.exports = Bacs;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    AT: \"AT\",\n    DE: \"DE\",\n    CH: \"CH\",\n    NL: \"NL\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\n\nclass Eft {\n    /**\n     * @returns { String }\n     */\n    getAccountNumber() {\n        return this.accountNumber;\n    }\n    /**\n     * @param { String } accountNumber\n     */\n    setAccountNumber(accountNumber) {\n        this.accountNumber = ModelHelper.validatePrimitive(accountNumber, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withAccountNumber(val) {\n        this.setAccountNumber(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getTransitNumber() {\n        return this.transitNumber;\n    }\n    /**\n     * @param { String } transitNumber\n     */\n    setTransitNumber(transitNumber) {\n        this.transitNumber = ModelHelper.validatePrimitive(transitNumber, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withTransitNumber(val) {\n        this.setTransitNumber(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getInstitutionId() {\n        return this.institutionId;\n    }\n    /**\n     * @param { String } institutionId\n     */\n    setInstitutionId(institutionId) {\n        this.institutionId = ModelHelper.validatePrimitive(institutionId, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withInstitutionId(val) {\n        this.setInstitutionId(val);\n        return this;\n    }\n\n    /**\n     * @returns { Eft }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Eft()\n            .withAccountNumber(ModelHelper.convertToType(data[\"accountNumber\"], String))\n            .withTransitNumber(ModelHelper.convertToType(data[\"transitNumber\"], String))\n            .withInstitutionId(ModelHelper.convertToType(data[\"institutionId\"], String));\n    }\n}\n\nmodule.exports = Eft;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\n\nclass Sepa {\n    /**\n     * @returns { String }\n     */\n    getIban() {\n        return this.iban;\n    }\n    /**\n     * @param { String } iban\n     */\n    setIban(iban) {\n        this.iban = ModelHelper.validatePrimitive(iban, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withIban(val) {\n        this.setIban(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getBic() {\n        return this.bic;\n    }\n    /**\n     * @param { String } bic\n     */\n    setBic(bic) {\n        this.bic = ModelHelper.validatePrimitive(bic, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withBic(val) {\n        this.setBic(val);\n        return this;\n    }\n\n    /**\n     * @returns { Sepa }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Sepa().withIban(ModelHelper.convertToType(data[\"iban\"], String)).withBic(ModelHelper.convertToType(data[\"bic\"], String));\n    }\n}\n\nmodule.exports = Sepa;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Ach = require(\"./Ach\");\nconst Bacs = require(\"./Bacs\");\nconst Country = require(\"./Country\");\nconst Eft = require(\"./Eft\");\nconst Sepa = require(\"./Sepa\");\n\n/**\n * Represents a bank account of a consumer. Contains holder information and different types of routing information.\n */\nclass Account {\n    /**\n     * @returns { String }\n     */\n    getHolder() {\n        return this.holder;\n    }\n    /**\n     * @param { String } holder\n     */\n    setHolder(holder) {\n        this.holder = ModelHelper.validatePrimitive(holder, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withHolder(val) {\n        this.setHolder(val);\n        return this;\n    }\n\n    /**\n     * @returns { Country }\n     */\n    getCountry() {\n        return this.country;\n    }\n    /**\n     * @param { Country } country\n     */\n    setCountry(country) {\n        this.country = ModelHelper.validateEnum(country, Country, \"Country\");\n    }\n    /**\n     * @param { Country } val\n     */\n    withCountry(val) {\n        this.setCountry(val);\n        return this;\n    }\n\n    /**\n     * @returns { Sepa }\n     */\n    getSepa() {\n        return this.sepa;\n    }\n    /**\n     * @param { Sepa } sepa\n     */\n    setSepa(sepa) {\n        this.sepa = ModelHelper.validateObject(sepa, Sepa);\n    }\n    /**\n     * @param { Sepa } val\n     */\n    withSepa(val) {\n        this.setSepa(val);\n        return this;\n    }\n\n    /**\n     * @returns { Eft }\n     */\n    getEft() {\n        return this.eft;\n    }\n    /**\n     * @param { Eft } eft\n     */\n    setEft(eft) {\n        this.eft = ModelHelper.validateObject(eft, Eft);\n    }\n    /**\n     * @param { Eft } val\n     */\n    withEft(val) {\n        this.setEft(val);\n        return this;\n    }\n\n    /**\n     * @returns { Ach }\n     */\n    getAch() {\n        return this.ach;\n    }\n    /**\n     * @param { Ach } ach\n     */\n    setAch(ach) {\n        this.ach = ModelHelper.validateObject(ach, Ach);\n    }\n    /**\n     * @param { Ach } val\n     */\n    withAch(val) {\n        this.setAch(val);\n        return this;\n    }\n\n    /**\n     * @returns { Bacs }\n     */\n    getBacs() {\n        return this.bacs;\n    }\n    /**\n     * @param { Bacs } bacs\n     */\n    setBacs(bacs) {\n        this.bacs = ModelHelper.validateObject(bacs, Bacs);\n    }\n    /**\n     * @param { Bacs } val\n     */\n    withBacs(val) {\n        this.setBacs(val);\n        return this;\n    }\n\n    /**\n     * @returns { Account }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Account()\n            .withHolder(ModelHelper.convertToType(data[\"holder\"], String))\n            .withCountry(ModelHelper.convertToType(data[\"country\"], Country))\n            .withSepa(ModelHelper.convertToType(data[\"sepa\"], Sepa))\n            .withEft(ModelHelper.convertToType(data[\"eft\"], Eft))\n            .withAch(ModelHelper.convertToType(data[\"ach\"], Ach))\n            .withBacs(ModelHelper.convertToType(data[\"bacs\"], Bacs));\n    }\n}\n\nmodule.exports = Account;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Country = require(\"./Country\");\n\n/**\n * Represents a postal address of a consumer.\n */\nclass Address {\n    /**\n     * @returns { String }\n     */\n    getStreet() {\n        return this.street;\n    }\n    /**\n     * @param { String } street\n     */\n    setStreet(street) {\n        this.street = ModelHelper.validatePrimitive(street, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withStreet(val) {\n        this.setStreet(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getHouseNumber() {\n        return this.houseNumber;\n    }\n    /**\n     * @param { String } houseNumber\n     */\n    setHouseNumber(houseNumber) {\n        this.houseNumber = ModelHelper.validatePrimitive(houseNumber, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withHouseNumber(val) {\n        this.setHouseNumber(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getAdditionalInfo() {\n        return this.additionalInfo;\n    }\n    /**\n     * @param { String } additionalInfo\n     */\n    setAdditionalInfo(additionalInfo) {\n        this.additionalInfo = ModelHelper.validatePrimitive(additionalInfo, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withAdditionalInfo(val) {\n        this.setAdditionalInfo(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getZipCode() {\n        return this.zipCode;\n    }\n    /**\n     * @param { String } zipCode\n     */\n    setZipCode(zipCode) {\n        this.zipCode = ModelHelper.validatePrimitive(zipCode, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withZipCode(val) {\n        this.setZipCode(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getCity() {\n        return this.city;\n    }\n    /**\n     * @param { String } city\n     */\n    setCity(city) {\n        this.city = ModelHelper.validatePrimitive(city, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withCity(val) {\n        this.setCity(val);\n        return this;\n    }\n\n    /**\n     * @returns { Country }\n     */\n    getCountryCode() {\n        return this.countryCode;\n    }\n    /**\n     * @param { Country } countryCode\n     */\n    setCountryCode(countryCode) {\n        this.countryCode = ModelHelper.validateEnum(countryCode, Country, \"Country\");\n    }\n    /**\n     * @param { Country } val\n     */\n    withCountryCode(val) {\n        this.setCountryCode(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * @param { String } state\n     */\n    setState(state) {\n        this.state = ModelHelper.validatePrimitive(state, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withState(val) {\n        this.setState(val);\n        return this;\n    }\n\n    /**\n     * @returns { Address }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Address()\n            .withStreet(ModelHelper.convertToType(data[\"street\"], String))\n            .withHouseNumber(ModelHelper.convertToType(data[\"houseNumber\"], String))\n            .withAdditionalInfo(ModelHelper.convertToType(data[\"additionalInfo\"], String))\n            .withZipCode(ModelHelper.convertToType(data[\"zipCode\"], String))\n            .withCity(ModelHelper.convertToType(data[\"city\"], String))\n            .withCountryCode(ModelHelper.convertToType(data[\"countryCode\"], Country))\n            .withState(ModelHelper.convertToType(data[\"state\"], String));\n    }\n}\n\nmodule.exports = Address;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\n\n/**\n * Representation of a company.\n */\nclass Company {\n    /**\n     * @returns { String }\n     */\n    getFirstName() {\n        return this.firstName;\n    }\n    /**\n     * @param { String } firstName\n     */\n    setFirstName(firstName) {\n        this.firstName = ModelHelper.validatePrimitive(firstName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withFirstName(val) {\n        this.setFirstName(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getLastName() {\n        return this.lastName;\n    }\n    /**\n     * @param { String } lastName\n     */\n    setLastName(lastName) {\n        this.lastName = ModelHelper.validatePrimitive(lastName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withLastName(val) {\n        this.setLastName(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getCompanyName() {\n        return this.companyName;\n    }\n    /**\n     * @param { String } companyName\n     */\n    setCompanyName(companyName) {\n        this.companyName = ModelHelper.validatePrimitive(companyName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withCompanyName(val) {\n        this.setCompanyName(val);\n        return this;\n    }\n\n    /**\n     * @returns { Company }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Company()\n            .withFirstName(ModelHelper.convertToType(data[\"firstName\"], String))\n            .withLastName(ModelHelper.convertToType(data[\"lastName\"], String))\n            .withCompanyName(ModelHelper.convertToType(data[\"companyName\"], String));\n    }\n}\n\nmodule.exports = Company;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Address = require(\"./Address\");\n\n/**\n * Address where goods can be delivered to.\n */\nclass DeliveryAddress {\n    /**\n     * @returns { String }\n     */\n    getFirstName() {\n        return this.firstName;\n    }\n    /**\n     * @param { String } firstName\n     */\n    setFirstName(firstName) {\n        this.firstName = ModelHelper.validatePrimitive(firstName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withFirstName(val) {\n        this.setFirstName(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getLastName() {\n        return this.lastName;\n    }\n    /**\n     * @param { String } lastName\n     */\n    setLastName(lastName) {\n        this.lastName = ModelHelper.validatePrimitive(lastName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withLastName(val) {\n        this.setLastName(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getCompanyName() {\n        return this.companyName;\n    }\n    /**\n     * @param { String } companyName\n     */\n    setCompanyName(companyName) {\n        this.companyName = ModelHelper.validatePrimitive(companyName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withCompanyName(val) {\n        this.setCompanyName(val);\n        return this;\n    }\n\n    /**\n     * @returns { Address }\n     */\n    getAddress() {\n        return this.address;\n    }\n    /**\n     * @param { Address } address\n     */\n    setAddress(address) {\n        this.address = ModelHelper.validateObject(address, Address);\n    }\n    /**\n     * @param { Address } val\n     */\n    withAddress(val) {\n        this.setAddress(val);\n        return this;\n    }\n\n    /**\n     * @returns { DeliveryAddress }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new DeliveryAddress()\n            .withFirstName(ModelHelper.convertToType(data[\"firstName\"], String))\n            .withLastName(ModelHelper.convertToType(data[\"lastName\"], String))\n            .withCompanyName(ModelHelper.convertToType(data[\"companyName\"], String))\n            .withAddress(ModelHelper.convertToType(data[\"address\"], Address));\n    }\n}\n\nmodule.exports = DeliveryAddress;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    BILLING_ADDRESS: \"BILLING_ADDRESS\",\n    ALTERNATIVE_DELIVERY_ADDRESS: \"ALTERNATIVE_DELIVERY_ADDRESS\",\n    SHOP_PICKUP: \"SHOP_PICKUP\",\n    POST_OFFICE_PICKUP: \"POST_OFFICE_PICKUP\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    DE: \"DE\",\n    EN: \"EN\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Address = require(\"./Address\");\n\n/**\n * Occupation of a person.\n */\nclass Occupation {\n    /**\n     * @returns { String }\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * @param { String } name\n     */\n    setName(name) {\n        this.name = ModelHelper.validatePrimitive(name, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withName(val) {\n        this.setName(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getYearlyGrossSalary() {\n        return this.yearlyGrossSalary;\n    }\n    /**\n     * @param { String } yearlyGrossSalary\n     */\n    setYearlyGrossSalary(yearlyGrossSalary) {\n        this.yearlyGrossSalary = ModelHelper.validatePrimitive(yearlyGrossSalary, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withYearlyGrossSalary(val) {\n        this.setYearlyGrossSalary(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getEmployersName() {\n        return this.employersName;\n    }\n    /**\n     * @param { String } employersName\n     */\n    setEmployersName(employersName) {\n        this.employersName = ModelHelper.validatePrimitive(employersName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withEmployersName(val) {\n        this.setEmployersName(val);\n        return this;\n    }\n\n    /**\n     * @returns { Address }\n     */\n    getEmployersAddress() {\n        return this.employersAddress;\n    }\n    /**\n     * @param { Address } employersAddress\n     */\n    setEmployersAddress(employersAddress) {\n        this.employersAddress = ModelHelper.validateObject(employersAddress, Address);\n    }\n    /**\n     * @param { Address } val\n     */\n    withEmployersAddress(val) {\n        this.setEmployersAddress(val);\n        return this;\n    }\n\n    /**\n     * @returns { Occupation }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Occupation()\n            .withName(ModelHelper.convertToType(data[\"name\"], String))\n            .withYearlyGrossSalary(ModelHelper.convertToType(data[\"yearlyGrossSalary\"], String))\n            .withEmployersName(ModelHelper.convertToType(data[\"employersName\"], String))\n            .withEmployersAddress(ModelHelper.convertToType(data[\"employersAddress\"], Address));\n    }\n}\n\nmodule.exports = Occupation;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Occupation = require(\"./Occupation\");\n\n/**\n * Properties of a natural person.\n */\nclass Person {\n    /**\n     * @returns { String }\n     */\n    getSalutation() {\n        return this.salutation;\n    }\n    /**\n     * @param { String } salutation\n     */\n    setSalutation(salutation) {\n        this.salutation = ModelHelper.validatePrimitive(salutation, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withSalutation(val) {\n        this.setSalutation(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getFirstName() {\n        return this.firstName;\n    }\n    /**\n     * @param { String } firstName\n     */\n    setFirstName(firstName) {\n        this.firstName = ModelHelper.validatePrimitive(firstName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withFirstName(val) {\n        this.setFirstName(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getLastName() {\n        return this.lastName;\n    }\n    /**\n     * @param { String } lastName\n     */\n    setLastName(lastName) {\n        this.lastName = ModelHelper.validatePrimitive(lastName, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withLastName(val) {\n        this.setLastName(val);\n        return this;\n    }\n\n    /**\n     * @returns { Date }\n     */\n    getBirthdate() {\n        return new Date(this.birthdate);\n    }\n    /**\n     * @param { Date } birthdate\n     */\n    setBirthdate(birthdate) {\n        this.birthdate = ModelHelper.validateDate(birthdate);\n    }\n    /**\n     * @param { Date } val\n     */\n    withBirthdate(val) {\n        this.setBirthdate(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getSocialId() {\n        return this.socialId;\n    }\n    /**\n     * @param { String } socialId\n     */\n    setSocialId(socialId) {\n        this.socialId = ModelHelper.validatePrimitive(socialId, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withSocialId(val) {\n        this.setSocialId(val);\n        return this;\n    }\n\n    /**\n     * @returns { Occupation }\n     */\n    getOccupation() {\n        return this.occupation;\n    }\n    /**\n     * @param { Occupation } occupation\n     */\n    setOccupation(occupation) {\n        this.occupation = ModelHelper.validateObject(occupation, Occupation);\n    }\n    /**\n     * @param { Occupation } val\n     */\n    withOccupation(val) {\n        this.setOccupation(val);\n        return this;\n    }\n\n    /**\n     * @returns { Person }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Person()\n            .withSalutation(ModelHelper.convertToType(data[\"salutation\"], String))\n            .withFirstName(ModelHelper.convertToType(data[\"firstName\"], String))\n            .withLastName(ModelHelper.convertToType(data[\"lastName\"], String))\n            .withBirthdate(ModelHelper.convertToType(data[\"birthdate\"], Date))\n            .withSocialId(ModelHelper.convertToType(data[\"socialId\"], String))\n            .withOccupation(ModelHelper.convertToType(data[\"occupation\"], Occupation));\n    }\n}\n\nmodule.exports = Person;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Account = require(\"./Account\");\nconst Address = require(\"./Address\");\nconst Company = require(\"./Company\");\nconst DeliveryAddress = require(\"./DeliveryAddress\");\nconst DeliveryType = require(\"./DeliveryType\");\nconst Language = require(\"./Language\");\nconst Person = require(\"./Person\");\n\n/**\n * Represents a consumer.\n */\nclass Consumer {\n    /**\n     * @returns { Person }\n     */\n    getPerson() {\n        return this.person;\n    }\n    /**\n     * @param { Person } person\n     */\n    setPerson(person) {\n        this.person = ModelHelper.validateObject(person, Person);\n    }\n    /**\n     * @param { Person } val\n     */\n    withPerson(val) {\n        this.setPerson(val);\n        return this;\n    }\n\n    /**\n     * @returns { Company }\n     */\n    getCompany() {\n        return this.company;\n    }\n    /**\n     * @param { Company } company\n     */\n    setCompany(company) {\n        this.company = ModelHelper.validateObject(company, Company);\n    }\n    /**\n     * @param { Company } val\n     */\n    withCompany(val) {\n        this.setCompany(val);\n        return this;\n    }\n\n    /**\n     * @returns { Account }\n     */\n    getBankAccount() {\n        return this.bankAccount;\n    }\n    /**\n     * @param { Account } bankAccount\n     */\n    setBankAccount(bankAccount) {\n        this.bankAccount = ModelHelper.validateObject(bankAccount, Account);\n    }\n    /**\n     * @param { Account } val\n     */\n    withBankAccount(val) {\n        this.setBankAccount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Address }\n     */\n    getBillingAddress() {\n        return this.billingAddress;\n    }\n    /**\n     * @param { Address } billingAddress\n     */\n    setBillingAddress(billingAddress) {\n        this.billingAddress = ModelHelper.validateObject(billingAddress, Address);\n    }\n    /**\n     * @param { Address } val\n     */\n    withBillingAddress(val) {\n        this.setBillingAddress(val);\n        return this;\n    }\n\n    /**\n     * @returns { DeliveryAddress }\n     */\n    getDeliveryAddress() {\n        return this.deliveryAddress;\n    }\n    /**\n     * @param { DeliveryAddress } deliveryAddress\n     */\n    setDeliveryAddress(deliveryAddress) {\n        this.deliveryAddress = ModelHelper.validateObject(deliveryAddress, DeliveryAddress);\n    }\n    /**\n     * @param { DeliveryAddress } val\n     */\n    withDeliveryAddress(val) {\n        this.setDeliveryAddress(val);\n        return this;\n    }\n\n    /**\n     * @returns { DeliveryType }\n     */\n    getDeliveryType() {\n        return this.deliveryType;\n    }\n    /**\n     * @param { DeliveryType } deliveryType\n     */\n    setDeliveryType(deliveryType) {\n        this.deliveryType = ModelHelper.validateEnum(deliveryType, DeliveryType, \"DeliveryType\");\n    }\n    /**\n     * @param { DeliveryType } val\n     */\n    withDeliveryType(val) {\n        this.setDeliveryType(val);\n        return this;\n    }\n\n    /**\n     * @returns { Language }\n     */\n    getLanguage() {\n        return this.language;\n    }\n    /**\n     * @param { Language } language\n     */\n    setLanguage(language) {\n        this.language = ModelHelper.validateEnum(language, Language, \"Language\");\n    }\n    /**\n     * @param { Language } val\n     */\n    withLanguage(val) {\n        this.setLanguage(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getPhone() {\n        return this.phone;\n    }\n    /**\n     * @param { String } phone\n     */\n    setPhone(phone) {\n        this.phone = ModelHelper.validatePrimitive(phone, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withPhone(val) {\n        this.setPhone(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getEmail() {\n        return this.email;\n    }\n    /**\n     * @param { String } email\n     */\n    setEmail(email) {\n        this.email = ModelHelper.validatePrimitive(email, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withEmail(val) {\n        this.setEmail(val);\n        return this;\n    }\n\n    /**\n     * @returns { Consumer }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Consumer()\n            .withPerson(ModelHelper.convertToType(data[\"person\"], Person))\n            .withCompany(ModelHelper.convertToType(data[\"company\"], Company))\n            .withBankAccount(ModelHelper.convertToType(data[\"bankAccount\"], Account))\n            .withBillingAddress(ModelHelper.convertToType(data[\"billingAddress\"], Address))\n            .withDeliveryAddress(ModelHelper.convertToType(data[\"deliveryAddress\"], DeliveryAddress))\n            .withDeliveryType(ModelHelper.convertToType(data[\"deliveryType\"], DeliveryType))\n            .withLanguage(ModelHelper.convertToType(data[\"language\"], Language))\n            .withPhone(ModelHelper.convertToType(data[\"phone\"], String))\n            .withEmail(ModelHelper.convertToType(data[\"email\"], String));\n    }\n}\n\nmodule.exports = Consumer;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\n\n/**\n * Consumer verification possibilities.\n */\nclass ConsumerVerification {\n    /**\n     * @returns { String }\n     */\n    getInitializeUrl() {\n        return this.initializeUrl;\n    }\n    /**\n     * @param { String } initializeUrl\n     */\n    setInitializeUrl(initializeUrl) {\n        this.initializeUrl = ModelHelper.validatePrimitive(initializeUrl, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withInitializeUrl(val) {\n        this.setInitializeUrl(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getVerifyUrl() {\n        return this.verifyUrl;\n    }\n    /**\n     * @param { String } verifyUrl\n     */\n    setVerifyUrl(verifyUrl) {\n        this.verifyUrl = ModelHelper.validatePrimitive(verifyUrl, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withVerifyUrl(val) {\n        this.setVerifyUrl(val);\n        return this;\n    }\n\n    /**\n     * Flag to state that consumer data are available.\n     * @returns { Boolean }\n     */\n    getConsumerDataAvailable() {\n        return this.consumerDataAvailable;\n    }\n    /**\n     * Flag to state that consumer data are available.\n     * @param { Boolean } consumerDataAvailable\n     */\n    setConsumerDataAvailable(consumerDataAvailable) {\n        this.consumerDataAvailable = ModelHelper.validateBoolean(consumerDataAvailable);\n    }\n    /**\n     * Flag to state that consumer data are available.\n     * @param { Boolean } val\n     */\n    withConsumerDataAvailable(val) {\n        this.setConsumerDataAvailable(val);\n        return this;\n    }\n\n    /**\n     * @returns { ConsumerVerification }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new ConsumerVerification()\n            .withInitializeUrl(ModelHelper.convertToType(data[\"initializeUrl\"], String))\n            .withVerifyUrl(ModelHelper.convertToType(data[\"verifyUrl\"], String))\n            .withConsumerDataAvailable(ModelHelper.convertToType(data[\"consumerDataAvailable\"], Boolean));\n    }\n}\n\nmodule.exports = ConsumerVerification;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\n\nclass Document {\n    /**\n     * @returns { String }\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * @param { String } name\n     */\n    setName(name) {\n        this.name = ModelHelper.validatePrimitive(name, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withName(val) {\n        this.setName(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getUrl() {\n        return this.url;\n    }\n    /**\n     * @param { String } url\n     */\n    setUrl(url) {\n        this.url = ModelHelper.validatePrimitive(url, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withUrl(val) {\n        this.setUrl(val);\n        return this;\n    }\n\n    /**\n     * @returns { Document }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Document()\n            .withName(ModelHelper.convertToType(data[\"name\"], String))\n            .withUrl(ModelHelper.convertToType(data[\"url\"], String));\n    }\n}\n\nmodule.exports = Document;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\n\nclass MerchantReference {\n    /**\n     * @returns { String }\n     */\n    getOrderId() {\n        return this.orderId;\n    }\n    /**\n     * @param { String } orderId\n     */\n    setOrderId(orderId) {\n        this.orderId = ModelHelper.validatePrimitive(orderId, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withOrderId(val) {\n        this.setOrderId(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getCustomerId() {\n        return this.customerId;\n    }\n    /**\n     * @param { String } customerId\n     */\n    setCustomerId(customerId) {\n        this.customerId = ModelHelper.validatePrimitive(customerId, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withCustomerId(val) {\n        this.setCustomerId(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getInvoiceId() {\n        return this.invoiceId;\n    }\n    /**\n     * @param { String } invoiceId\n     */\n    setInvoiceId(invoiceId) {\n        this.invoiceId = ModelHelper.validatePrimitive(invoiceId, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withInvoiceId(val) {\n        this.setInvoiceId(val);\n        return this;\n    }\n\n    /**\n     * @returns { MerchantReference }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new MerchantReference()\n            .withOrderId(ModelHelper.convertToType(data[\"orderId\"], String))\n            .withCustomerId(ModelHelper.convertToType(data[\"customerId\"], String))\n            .withInvoiceId(ModelHelper.convertToType(data[\"invoiceId\"], String));\n    }\n}\n\nmodule.exports = MerchantReference;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Amount = require(\"./Amount\");\nconst OperationStatus = require(\"./OperationStatus\");\n\nclass OperationInformation {\n    /**\n     * @returns { String }\n     */\n    getOperationId() {\n        return this.operationId;\n    }\n    /**\n     * @param { String } operationId\n     */\n    setOperationId(operationId) {\n        this.operationId = ModelHelper.validatePrimitive(operationId, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withOperationId(val) {\n        this.setOperationId(val);\n        return this;\n    }\n\n    /**\n     * @returns { OperationStatus }\n     */\n    getStatus() {\n        return this.status;\n    }\n    /**\n     * @param { OperationStatus } status\n     */\n    setStatus(status) {\n        this.status = ModelHelper.validateEnum(status, OperationStatus, \"OperationStatus\");\n    }\n    /**\n     * @param { OperationStatus } val\n     */\n    withStatus(val) {\n        this.setStatus(val);\n        return this;\n    }\n\n    /**\n     * @returns { Date }\n     */\n    getProcessingDate() {\n        return new Date(this.processingDate);\n    }\n    /**\n     * @param { Date } processingDate\n     */\n    setProcessingDate(processingDate) {\n        this.processingDate = ModelHelper.validateDate(processingDate);\n    }\n    /**\n     * @param { Date } val\n     */\n    withProcessingDate(val) {\n        this.setProcessingDate(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getOperationAmount() {\n        return this.operationAmount;\n    }\n    /**\n     * @param { Amount } operationAmount\n     */\n    setOperationAmount(operationAmount) {\n        this.operationAmount = ModelHelper.validateObject(operationAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withOperationAmount(val) {\n        this.setOperationAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { OperationInformation }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new OperationInformation()\n            .withOperationId(ModelHelper.convertToType(data[\"operationId\"], String))\n            .withStatus(ModelHelper.convertToType(data[\"status\"], OperationStatus))\n            .withProcessingDate(ModelHelper.convertToType(data[\"processingDate\"], Date))\n            .withOperationAmount(ModelHelper.convertToType(data[\"operationAmount\"], Amount));\n    }\n}\n\nmodule.exports = OperationInformation;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    DIRECT_DEBIT: \"DIRECT_DEBIT\",\n    BANK_TRANSFER: \"BANK_TRANSFER\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    HTML: \"HTML\",\n    PDF: \"PDF\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst DocumentType = require(\"./DocumentType\");\n\nclass Contract {\n    /**\n     * @returns { String }\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * @param { String } name\n     */\n    setName(name) {\n        this.name = ModelHelper.validatePrimitive(name, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withName(val) {\n        this.setName(val);\n        return this;\n    }\n\n    /**\n     * @returns { DocumentType }\n     */\n    getType() {\n        return this.type;\n    }\n    /**\n     * @param { DocumentType } type\n     */\n    setType(type) {\n        this.type = ModelHelper.validateEnum(type, DocumentType, \"DocumentType\");\n    }\n    /**\n     * @param { DocumentType } val\n     */\n    withType(val) {\n        this.setType(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * @param { String } id\n     */\n    setId(id) {\n        this.id = ModelHelper.validatePrimitive(id, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withId(val) {\n        this.setId(val);\n        return this;\n    }\n\n    /**\n     * @returns { String }\n     */\n    getUrl() {\n        return this.url;\n    }\n    /**\n     * @param { String } url\n     */\n    setUrl(url) {\n        this.url = ModelHelper.validatePrimitive(url, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withUrl(val) {\n        this.setUrl(val);\n        return this;\n    }\n\n    /**\n     * @returns { Contract }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Contract()\n            .withName(ModelHelper.convertToType(data[\"name\"], String))\n            .withType(ModelHelper.convertToType(data[\"type\"], DocumentType))\n            .withId(ModelHelper.convertToType(data[\"id\"], String))\n            .withUrl(ModelHelper.convertToType(data[\"url\"], String));\n    }\n}\n\nmodule.exports = Contract;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Amount = require(\"./Amount\");\n\nclass Payment {\n    /**\n     * @returns { Date }\n     */\n    getDueDate() {\n        return new Date(this.dueDate);\n    }\n    /**\n     * @param { Date } dueDate\n     */\n    setDueDate(dueDate) {\n        this.dueDate = ModelHelper.validateDate(dueDate);\n    }\n    /**\n     * @param { Date } val\n     */\n    withDueDate(val) {\n        this.setDueDate(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getPaymentAmount() {\n        return this.paymentAmount;\n    }\n    /**\n     * @param { Amount } paymentAmount\n     */\n    setPaymentAmount(paymentAmount) {\n        this.paymentAmount = ModelHelper.validateObject(paymentAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withPaymentAmount(val) {\n        this.setPaymentAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Payment }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new Payment()\n            .withDueDate(ModelHelper.convertToType(data[\"dueDate\"], Date))\n            .withPaymentAmount(ModelHelper.convertToType(data[\"paymentAmount\"], Amount));\n    }\n}\n\nmodule.exports = Payment;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    INVOICE: \"INVOICE\",\n    INSTALLMENT: \"INSTALLMENT\",\n    MONTHLY_INVOICE: \"MONTHLY_INVOICE\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Amount = require(\"./Amount\");\nconst Contract = require(\"./Contract\");\nconst Country = require(\"./Country\");\nconst Currency = require(\"./Currency\");\nconst Payment = require(\"./Payment\");\nconst PaymentMethod = require(\"./PaymentMethod\");\nconst ProductType = require(\"./ProductType\");\n\nclass PaymentOption {\n    /**\n     * @returns { String }\n     */\n    getOptionId() {\n        return this.optionId;\n    }\n    /**\n     * @param { String } optionId\n     */\n    setOptionId(optionId) {\n        this.optionId = ModelHelper.validatePrimitive(optionId, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withOptionId(val) {\n        this.setOptionId(val);\n        return this;\n    }\n\n    /**\n     * @returns { Country }\n     */\n    getConsumerCountry() {\n        return this.consumerCountry;\n    }\n    /**\n     * @param { Country } consumerCountry\n     */\n    setConsumerCountry(consumerCountry) {\n        this.consumerCountry = ModelHelper.validateEnum(consumerCountry, Country, \"Country\");\n    }\n    /**\n     * @param { Country } val\n     */\n    withConsumerCountry(val) {\n        this.setConsumerCountry(val);\n        return this;\n    }\n\n    /**\n     * @returns { Currency }\n     */\n    getCurrency() {\n        return this.currency;\n    }\n    /**\n     * @param { Currency } currency\n     */\n    setCurrency(currency) {\n        this.currency = ModelHelper.validateEnum(currency, Currency, \"Currency\");\n    }\n    /**\n     * @param { Currency } val\n     */\n    withCurrency(val) {\n        this.setCurrency(val);\n        return this;\n    }\n\n    /**\n     * @returns { ProductType }\n     */\n    getProductType() {\n        return this.productType;\n    }\n    /**\n     * @param { ProductType } productType\n     */\n    setProductType(productType) {\n        this.productType = ModelHelper.validateEnum(productType, ProductType, \"ProductType\");\n    }\n    /**\n     * @param { ProductType } val\n     */\n    withProductType(val) {\n        this.setProductType(val);\n        return this;\n    }\n\n    /**\n     * @returns { [PaymentMethod] }\n     */\n    getSupportedPaymentMethods() {\n        return this.supportedPaymentMethods;\n    }\n    /**\n     * @param { [PaymentMethod] } supportedPaymentMethods\n     */\n    setSupportedPaymentMethods(supportedPaymentMethods) {\n        this.supportedPaymentMethods = ModelHelper.validateArrayEnum(supportedPaymentMethods, PaymentMethod);\n    }\n    /**\n     * @param { [PaymentMethod] } val\n     */\n    withSupportedPaymentMethods(val) {\n        this.setSupportedPaymentMethods(val);\n        return this;\n    }\n    /**\n     * @param { PaymentMethod } val\n     */\n    addSupportedPaymentMethods(val) {\n        val = ModelHelper.validateEnum(val, PaymentMethod, \"PaymentMethod\");\n        this.supportedPaymentMethods = this.supportedPaymentMethods || [];\n        this.supportedPaymentMethods.push(val);\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getTotalAmount() {\n        return this.totalAmount;\n    }\n    /**\n     * @param { Amount } totalAmount\n     */\n    setTotalAmount(totalAmount) {\n        this.totalAmount = ModelHelper.validateObject(totalAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withTotalAmount(val) {\n        this.setTotalAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getPurchaseAmount() {\n        return this.purchaseAmount;\n    }\n    /**\n     * @param { Amount } purchaseAmount\n     */\n    setPurchaseAmount(purchaseAmount) {\n        this.purchaseAmount = ModelHelper.validateObject(purchaseAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withPurchaseAmount(val) {\n        this.setPurchaseAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Number }\n     */\n    getInterestRate() {\n        return this.interestRate;\n    }\n    /**\n     * @param { Number } interestRate\n     */\n    setInterestRate(interestRate) {\n        this.interestRate = ModelHelper.validatePrimitive(interestRate, \"number\");\n    }\n    /**\n     * @param { Number } val\n     */\n    withInterestRate(val) {\n        this.setInterestRate(val);\n        return this;\n    }\n\n    /**\n     * @returns { Number }\n     */\n    getEffectiveInterestRate() {\n        return this.effectiveInterestRate;\n    }\n    /**\n     * @param { Number } effectiveInterestRate\n     */\n    setEffectiveInterestRate(effectiveInterestRate) {\n        this.effectiveInterestRate = ModelHelper.validatePrimitive(effectiveInterestRate, \"number\");\n    }\n    /**\n     * @param { Number } val\n     */\n    withEffectiveInterestRate(val) {\n        this.setEffectiveInterestRate(val);\n        return this;\n    }\n\n    /**\n     * @returns { Number }\n     */\n    getNumberOfPayments() {\n        return this.numberOfPayments;\n    }\n    /**\n     * @param { Number } numberOfPayments\n     */\n    setNumberOfPayments(numberOfPayments) {\n        this.numberOfPayments = ModelHelper.validatePrimitive(numberOfPayments, \"number\");\n    }\n    /**\n     * @param { Number } val\n     */\n    withNumberOfPayments(val) {\n        this.setNumberOfPayments(val);\n        return this;\n    }\n\n    /**\n     * @returns { [Payment] }\n     */\n    getPayments() {\n        return this.payments;\n    }\n    /**\n     * @param { [Payment] } payments\n     */\n    setPayments(payments) {\n        this.payments = ModelHelper.validateArray(payments, Payment);\n    }\n    /**\n     * @param { [Payment] } val\n     */\n    withPayments(val) {\n        this.setPayments(val);\n        return this;\n    }\n    /**\n     * @param { Payment } val\n     */\n    addPayments(val) {\n        val = ModelHelper.validateObject(val, Payment, \"Payment\");\n        this.payments = this.payments || [];\n        this.payments.push(val);\n    }\n\n    /**\n     * @returns { [Contract] }\n     */\n    getContracts() {\n        return this.contracts;\n    }\n    /**\n     * @param { [Contract] } contracts\n     */\n    setContracts(contracts) {\n        this.contracts = ModelHelper.validateArray(contracts, Contract);\n    }\n    /**\n     * @param { [Contract] } val\n     */\n    withContracts(val) {\n        this.setContracts(val);\n        return this;\n    }\n    /**\n     * @param { Contract } val\n     */\n    addContracts(val) {\n        val = ModelHelper.validateObject(val, Contract, \"Contract\");\n        this.contracts = this.contracts || [];\n        this.contracts.push(val);\n    }\n\n    /**\n     * @returns { PaymentOption }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new PaymentOption()\n            .withOptionId(ModelHelper.convertToType(data[\"optionId\"], String))\n            .withConsumerCountry(ModelHelper.convertToType(data[\"consumerCountry\"], Country))\n            .withCurrency(ModelHelper.convertToType(data[\"currency\"], Currency))\n            .withProductType(ModelHelper.convertToType(data[\"productType\"], ProductType))\n            .withSupportedPaymentMethods(ModelHelper.convertToType(data[\"supportedPaymentMethods\"], [PaymentMethod]))\n            .withTotalAmount(ModelHelper.convertToType(data[\"totalAmount\"], Amount))\n            .withPurchaseAmount(ModelHelper.convertToType(data[\"purchaseAmount\"], Amount))\n            .withInterestRate(ModelHelper.convertToType(data[\"interestRate\"], Number))\n            .withEffectiveInterestRate(ModelHelper.convertToType(data[\"effectiveInterestRate\"], Number))\n            .withNumberOfPayments(ModelHelper.convertToType(data[\"numberOfPayments\"], Number))\n            .withPayments(ModelHelper.convertToType(data[\"payments\"], [Payment]))\n            .withContracts(ModelHelper.convertToType(data[\"contracts\"], [Contract]));\n    }\n}\n\nmodule.exports = PaymentOption;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Account = require(\"./Account\");\nconst PaymentMethod = require(\"./PaymentMethod\");\nconst PaymentOption = require(\"./PaymentOption\");\n\nclass PaymentInformation {\n    /**\n     * @returns { String }\n     */\n    getPaymentReference() {\n        return this.paymentReference;\n    }\n    /**\n     * @param { String } paymentReference\n     */\n    setPaymentReference(paymentReference) {\n        this.paymentReference = ModelHelper.validatePrimitive(paymentReference, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withPaymentReference(val) {\n        this.setPaymentReference(val);\n        return this;\n    }\n\n    /**\n     * @returns { Account }\n     */\n    getAccount() {\n        return this.account;\n    }\n    /**\n     * @param { Account } account\n     */\n    setAccount(account) {\n        this.account = ModelHelper.validateObject(account, Account);\n    }\n    /**\n     * @param { Account } val\n     */\n    withAccount(val) {\n        this.setAccount(val);\n        return this;\n    }\n\n    /**\n     * @returns { PaymentMethod }\n     */\n    getPaymentMethod() {\n        return this.paymentMethod;\n    }\n    /**\n     * @param { PaymentMethod } paymentMethod\n     */\n    setPaymentMethod(paymentMethod) {\n        this.paymentMethod = ModelHelper.validateEnum(paymentMethod, PaymentMethod, \"PaymentMethod\");\n    }\n    /**\n     * @param { PaymentMethod } val\n     */\n    withPaymentMethod(val) {\n        this.setPaymentMethod(val);\n        return this;\n    }\n\n    /**\n     * @returns { PaymentOption }\n     */\n    getConfirmedPaymentOption() {\n        return this.confirmedPaymentOption;\n    }\n    /**\n     * @param { PaymentOption } confirmedPaymentOption\n     */\n    setConfirmedPaymentOption(confirmedPaymentOption) {\n        this.confirmedPaymentOption = ModelHelper.validateObject(confirmedPaymentOption, PaymentOption);\n    }\n    /**\n     * @param { PaymentOption } val\n     */\n    withConfirmedPaymentOption(val) {\n        this.setConfirmedPaymentOption(val);\n        return this;\n    }\n\n    /**\n     * @returns { PaymentInformation }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new PaymentInformation()\n            .withPaymentReference(ModelHelper.convertToType(data[\"paymentReference\"], String))\n            .withAccount(ModelHelper.convertToType(data[\"account\"], Account))\n            .withPaymentMethod(ModelHelper.convertToType(data[\"paymentMethod\"], PaymentMethod))\n            .withConfirmedPaymentOption(ModelHelper.convertToType(data[\"confirmedPaymentOption\"], PaymentOption));\n    }\n}\n\nmodule.exports = PaymentInformation;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    INITIALIZED: \"INITIALIZED\",\n    PRECHECKED: \"PRECHECKED\",\n    DECLINED: \"DECLINED\",\n    AUTHORIZED: \"AUTHORIZED\",\n    AUTHORIZATION_PENDING: \"AUTHORIZATION_PENDING\",\n    CANCELLED: \"CANCELLED\",\n    FULFILLMENT: \"FULFILLMENT\",\n    BLOCKED: \"BLOCKED\",\n    TIMED_OUT: \"TIMED_OUT\",\n    CLOSED: \"CLOSED\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst Amount = require(\"./Amount\");\nconst Consumer = require(\"./Consumer\");\nconst ConsumerVerification = require(\"./ConsumerVerification\");\nconst Currency = require(\"./Currency\");\nconst Document = require(\"./Document\");\nconst MerchantReference = require(\"./MerchantReference\");\nconst OperationInformation = require(\"./OperationInformation\");\nconst PaymentInformation = require(\"./PaymentInformation\");\nconst PaymentOption = require(\"./PaymentOption\");\nconst PurchaseState = require(\"./PurchaseState\");\n\n/**\n * Describes the current state of a purchase.\n */\nclass PurchaseInformation {\n    /**\n     * @returns { String }\n     */\n    getPurchaseId() {\n        return this.purchaseId;\n    }\n    /**\n     * @param { String } purchaseId\n     */\n    setPurchaseId(purchaseId) {\n        this.purchaseId = ModelHelper.validatePrimitive(purchaseId, \"string\");\n    }\n    /**\n     * @param { String } val\n     */\n    withPurchaseId(val) {\n        this.setPurchaseId(val);\n        return this;\n    }\n\n    /**\n     * @returns { PurchaseState }\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * @param { PurchaseState } state\n     */\n    setState(state) {\n        this.state = ModelHelper.validateEnum(state, PurchaseState, \"PurchaseState\");\n    }\n    /**\n     * @param { PurchaseState } val\n     */\n    withState(val) {\n        this.setState(val);\n        return this;\n    }\n\n    /**\n     * @returns { Currency }\n     */\n    getCurrency() {\n        return this.currency;\n    }\n    /**\n     * @param { Currency } currency\n     */\n    setCurrency(currency) {\n        this.currency = ModelHelper.validateEnum(currency, Currency, \"Currency\");\n    }\n    /**\n     * @param { Currency } val\n     */\n    withCurrency(val) {\n        this.setCurrency(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getAuthorizedAmount() {\n        return this.authorizedAmount;\n    }\n    /**\n     * @param { Amount } authorizedAmount\n     */\n    setAuthorizedAmount(authorizedAmount) {\n        this.authorizedAmount = ModelHelper.validateObject(authorizedAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withAuthorizedAmount(val) {\n        this.setAuthorizedAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getCapturedAmount() {\n        return this.capturedAmount;\n    }\n    /**\n     * @param { Amount } capturedAmount\n     */\n    setCapturedAmount(capturedAmount) {\n        this.capturedAmount = ModelHelper.validateObject(capturedAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withCapturedAmount(val) {\n        this.setCapturedAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getRemainingCaptureAmount() {\n        return this.remainingCaptureAmount;\n    }\n    /**\n     * @param { Amount } remainingCaptureAmount\n     */\n    setRemainingCaptureAmount(remainingCaptureAmount) {\n        this.remainingCaptureAmount = ModelHelper.validateObject(remainingCaptureAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withRemainingCaptureAmount(val) {\n        this.setRemainingCaptureAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getRefundedAmount() {\n        return this.refundedAmount;\n    }\n    /**\n     * @param { Amount } refundedAmount\n     */\n    setRefundedAmount(refundedAmount) {\n        this.refundedAmount = ModelHelper.validateObject(refundedAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withRefundedAmount(val) {\n        this.setRefundedAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getRemainingRefundableAmount() {\n        return this.remainingRefundableAmount;\n    }\n    /**\n     * @param { Amount } remainingRefundableAmount\n     */\n    setRemainingRefundableAmount(remainingRefundableAmount) {\n        this.remainingRefundableAmount = ModelHelper.validateObject(remainingRefundableAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withRemainingRefundableAmount(val) {\n        this.setRemainingRefundableAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Amount }\n     */\n    getPurchaseAmount() {\n        return this.purchaseAmount;\n    }\n    /**\n     * @param { Amount } purchaseAmount\n     */\n    setPurchaseAmount(purchaseAmount) {\n        this.purchaseAmount = ModelHelper.validateObject(purchaseAmount, Amount);\n    }\n    /**\n     * @param { Amount } val\n     */\n    withPurchaseAmount(val) {\n        this.setPurchaseAmount(val);\n        return this;\n    }\n\n    /**\n     * @returns { Consumer }\n     */\n    getConsumer() {\n        return this.consumer;\n    }\n    /**\n     * @param { Consumer } consumer\n     */\n    setConsumer(consumer) {\n        this.consumer = ModelHelper.validateObject(consumer, Consumer);\n    }\n    /**\n     * @param { Consumer } val\n     */\n    withConsumer(val) {\n        this.setConsumer(val);\n        return this;\n    }\n\n    /**\n     * @returns { ConsumerVerification }\n     */\n    getConsumerVerification() {\n        return this.consumerVerification;\n    }\n    /**\n     * @param { ConsumerVerification } consumerVerification\n     */\n    setConsumerVerification(consumerVerification) {\n        this.consumerVerification = ModelHelper.validateObject(consumerVerification, ConsumerVerification);\n    }\n    /**\n     * @param { ConsumerVerification } val\n     */\n    withConsumerVerification(val) {\n        this.setConsumerVerification(val);\n        return this;\n    }\n\n    /**\n     * @returns { MerchantReference }\n     */\n    getMerchantReference() {\n        return this.merchantReference;\n    }\n    /**\n     * @param { MerchantReference } merchantReference\n     */\n    setMerchantReference(merchantReference) {\n        this.merchantReference = ModelHelper.validateObject(merchantReference, MerchantReference);\n    }\n    /**\n     * @param { MerchantReference } val\n     */\n    withMerchantReference(val) {\n        this.setMerchantReference(val);\n        return this;\n    }\n\n    /**\n     * @returns { PaymentInformation }\n     */\n    getPaymentInformation() {\n        return this.paymentInformation;\n    }\n    /**\n     * @param { PaymentInformation } paymentInformation\n     */\n    setPaymentInformation(paymentInformation) {\n        this.paymentInformation = ModelHelper.validateObject(paymentInformation, PaymentInformation);\n    }\n    /**\n     * @param { PaymentInformation } val\n     */\n    withPaymentInformation(val) {\n        this.setPaymentInformation(val);\n        return this;\n    }\n\n    /**\n     * @returns { [PaymentOption] }\n     */\n    getPaymentOptions() {\n        return this.paymentOptions;\n    }\n    /**\n     * @param { [PaymentOption] } paymentOptions\n     */\n    setPaymentOptions(paymentOptions) {\n        this.paymentOptions = ModelHelper.validateArray(paymentOptions, PaymentOption);\n    }\n    /**\n     * @param { [PaymentOption] } val\n     */\n    withPaymentOptions(val) {\n        this.setPaymentOptions(val);\n        return this;\n    }\n    /**\n     * @param { PaymentOption } val\n     */\n    addPaymentOptions(val) {\n        val = ModelHelper.validateObject(val, PaymentOption, \"PaymentOption\");\n        this.paymentOptions = this.paymentOptions || [];\n        this.paymentOptions.push(val);\n    }\n\n    /**\n     * Performed captures.\n     * @returns { [OperationInformation] }\n     */\n    getCaptures() {\n        return this.captures;\n    }\n    /**\n     * Performed captures.\n     * @param { [OperationInformation] } captures\n     */\n    setCaptures(captures) {\n        this.captures = ModelHelper.validateArray(captures, OperationInformation);\n    }\n    /**\n     * Performed captures.\n     * @param { [OperationInformation] } val\n     */\n    withCaptures(val) {\n        this.setCaptures(val);\n        return this;\n    }\n    /**\n     * Performed captures.\n     * @param { OperationInformation } val\n     */\n    addCaptures(val) {\n        val = ModelHelper.validateObject(val, OperationInformation, \"OperationInformation\");\n        this.captures = this.captures || [];\n        this.captures.push(val);\n    }\n\n    /**\n     * Performed refunds.\n     * @returns { [OperationInformation] }\n     */\n    getRefunds() {\n        return this.refunds;\n    }\n    /**\n     * Performed refunds.\n     * @param { [OperationInformation] } refunds\n     */\n    setRefunds(refunds) {\n        this.refunds = ModelHelper.validateArray(refunds, OperationInformation);\n    }\n    /**\n     * Performed refunds.\n     * @param { [OperationInformation] } val\n     */\n    withRefunds(val) {\n        this.setRefunds(val);\n        return this;\n    }\n    /**\n     * Performed refunds.\n     * @param { OperationInformation } val\n     */\n    addRefunds(val) {\n        val = ModelHelper.validateObject(val, OperationInformation, \"OperationInformation\");\n        this.refunds = this.refunds || [];\n        this.refunds.push(val);\n    }\n\n    /**\n     * Static documents.\n     * @returns { [Document] }\n     */\n    getDocuments() {\n        return this.documents;\n    }\n    /**\n     * Static documents.\n     * @param { [Document] } documents\n     */\n    setDocuments(documents) {\n        this.documents = ModelHelper.validateArray(documents, Document);\n    }\n    /**\n     * Static documents.\n     * @param { [Document] } val\n     */\n    withDocuments(val) {\n        this.setDocuments(val);\n        return this;\n    }\n    /**\n     * Static documents.\n     * @param { Document } val\n     */\n    addDocuments(val) {\n        val = ModelHelper.validateObject(val, Document, \"Document\");\n        this.documents = this.documents || [];\n        this.documents.push(val);\n    }\n\n    /**\n     * Additional information provided as a key value map.\n     * @returns { {String: String} }\n     */\n    getMetaData() {\n        return this.metaData;\n    }\n    /**\n     * Additional information provided as a key value map.\n     * @param { {String: String} } metaData\n     */\n    setMetaData(metaData) {\n        this.metaData = ModelHelper.validateMap(metaData, \"string\", \"string\");\n    }\n    /**\n     * Additional information provided as a key value map.\n     * @param { {String: String} } val\n     */\n    withMetaData(val) {\n        this.setMetaData(val);\n        return this;\n    }\n    /**\n     * Additional information provided as a key value map.\n     * @param { String } key\n     * @param { String } val\n     */\n    addMetaData(key, val) {\n        key = ModelHelper.validatePrimitive(key, \"string\", \"metaData[key]\");\n        val = ModelHelper.validatePrimitive(val, \"string\", \"metaData[value]\");\n        this.metaData = this.metaData || {};\n        this.metaData[key] = val;\n    }\n\n    /**\n     * @returns { PurchaseInformation }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new PurchaseInformation()\n            .withPurchaseId(ModelHelper.convertToType(data[\"purchaseId\"], String))\n            .withState(ModelHelper.convertToType(data[\"state\"], PurchaseState))\n            .withCurrency(ModelHelper.convertToType(data[\"currency\"], Currency))\n            .withAuthorizedAmount(ModelHelper.convertToType(data[\"authorizedAmount\"], Amount))\n            .withCapturedAmount(ModelHelper.convertToType(data[\"capturedAmount\"], Amount))\n            .withRemainingCaptureAmount(ModelHelper.convertToType(data[\"remainingCaptureAmount\"], Amount))\n            .withRefundedAmount(ModelHelper.convertToType(data[\"refundedAmount\"], Amount))\n            .withRemainingRefundableAmount(ModelHelper.convertToType(data[\"remainingRefundableAmount\"], Amount))\n            .withPurchaseAmount(ModelHelper.convertToType(data[\"purchaseAmount\"], Amount))\n            .withConsumer(ModelHelper.convertToType(data[\"consumer\"], Consumer))\n            .withConsumerVerification(ModelHelper.convertToType(data[\"consumerVerification\"], ConsumerVerification))\n            .withMerchantReference(ModelHelper.convertToType(data[\"merchantReference\"], MerchantReference))\n            .withPaymentInformation(ModelHelper.convertToType(data[\"paymentInformation\"], PaymentInformation))\n            .withPaymentOptions(ModelHelper.convertToType(data[\"paymentOptions\"], [PaymentOption]))\n            .withCaptures(ModelHelper.convertToType(data[\"captures\"], [OperationInformation]))\n            .withRefunds(ModelHelper.convertToType(data[\"refunds\"], [OperationInformation]))\n            .withDocuments(ModelHelper.convertToType(data[\"documents\"], [Document]))\n            .withMetaData(ModelHelper.convertToType(data[\"metaData\"], { String: String }));\n    }\n}\n\nmodule.exports = PurchaseInformation;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst OperationResult = require(\"./OperationResult\");\nconst PurchaseInformation = require(\"./PurchaseInformation\");\n\nclass PurchaseOperationResponse {\n    /**\n     * @returns { OperationResult }\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * @param { OperationResult } result\n     */\n    setResult(result) {\n        this.result = ModelHelper.validateObject(result, OperationResult);\n    }\n    /**\n     * @param { OperationResult } val\n     */\n    withResult(val) {\n        this.setResult(val);\n        return this;\n    }\n\n    /**\n     * @returns { PurchaseInformation }\n     */\n    getPurchase() {\n        return this.purchase;\n    }\n    /**\n     * @param { PurchaseInformation } purchase\n     */\n    setPurchase(purchase) {\n        this.purchase = ModelHelper.validateObject(purchase, PurchaseInformation);\n    }\n    /**\n     * @param { PurchaseInformation } val\n     */\n    withPurchase(val) {\n        this.setPurchase(val);\n        return this;\n    }\n\n    /**\n     * @returns { PurchaseOperationResponse }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new PurchaseOperationResponse()\n            .withResult(ModelHelper.convertToType(data[\"result\"], OperationResult))\n            .withPurchase(ModelHelper.convertToType(data[\"purchase\"], PurchaseInformation));\n    }\n}\n\nmodule.exports = PurchaseOperationResponse;\n","const ValidationException = require(\"../exceptions/ValidationException\");\r\nconst AuthorizationException = require(\"../exceptions/AuthorizationException\");\r\nconst ReferenceException = require(\"../exceptions/ReferenceException\");\r\nconst UnzerException = require(\"../exceptions/UnzerException\");\r\nconst ApiException = require(\"../exceptions/ApiException\");\r\n\r\nconst PurchaseOperationResponse = require(\"../model/PurchaseOperationResponse\");\r\n\r\n/**\r\n *Creates an instance of BaseConnection.\r\n * @memberof BaseConnection\r\n */\r\n\r\nclass BaseConnection {\r\n    /**\r\n     * Handle Response error\r\n     * @param {Error} error Error\r\n     * @param {Number} status Status code\r\n     */\r\n    handleResponseError(error, status) {\r\n        // console.log(\"error : \", JSON.stringify(error, null, 2));\r\n        let operationResult = null;\r\n        if (error.response && error.hasOwnProperty(\"response\") && error['response'].hasOwnProperty('data')) {\r\n            let operationResponse = PurchaseOperationResponse.constructFromObject(error['response']['data']);\r\n            if (operationResponse) {\r\n                operationResult = operationResponse.getResult();\r\n            }\r\n        }\r\n        switch (status) {\r\n            case 400:\r\n                throw new ValidationException(status, operationResult, error);\r\n            case 401:\r\n            case 403:\r\n                throw new AuthorizationException(status, operationResult, error);\r\n            case 404:\r\n            case 409:\r\n            case 410:\r\n                throw new ReferenceException(status, operationResult, error);\r\n            case 500:\r\n            case 502:\r\n            case 503:\r\n                throw new UnzerException(status, operationResult, error);\r\n            default:\r\n                throw new ApiException(status, operationResult, error);\r\n        }\r\n    }\r\n\r\n    handleRequestError(error) {\r\n        throw new ApiException(status, null, error);\r\n    }\r\n}\r\n\r\nmodule.exports = BaseConnection;\r\n","\r\n/**\r\n * Connection configuration\r\n * @typedef {Object} ConnectionConfig\r\n * @property {Number} baseURL  Set the instance baseURL\r\n * @property {String} timeout  Set a default timeout to the Connection instance\r\n * @property {Boolean} headers Add additional headers to Connection instance\r\n * @property {Logger} log      Log requests and responses.\r\n */\r\n\r\nconst axios = require(\"axios\").default;\r\nconst BaseConnection = require(\"./BaseConnection\");\r\n\r\nclass AxiosConnection extends BaseConnection {\r\n    /**\r\n     * Creates an instance of Communicator.\r\n     * @memberOf AxiosConnection\r\n     * @param {ConnectionConfig} [config]\r\n     */\r\n    constructor(config = {}) {\r\n        super();\r\n\r\n        this.axios = axios.create({\r\n            baseURL: config.baseURL,\r\n            timeout: config.timeout,\r\n            headers: config.headers,\r\n        });\r\n\r\n        this.axios.interceptors.request.use(\r\n            (request) => {\r\n                if (config.log && config.log.request) {\r\n                    const req = Object.assign({}, request)\r\n                    if (req.data) req.data = \"***\";\r\n                    config.log.request(req);\r\n                }\r\n                return request;\r\n            },\r\n            (error) => {\r\n                config.log && config.log.requestError && config.log.requestError(error);\r\n                this.handleRequestError(error);\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        this.axios.interceptors.response.use(\r\n            (response) => {\r\n                if (config.log && config.log.response) {\r\n                    const resp = Object.assign({}, response)\r\n                    if (resp.data) resp.data = \"***\";\r\n                    config.log.response(resp);\r\n                }\r\n                config.log && config.log.response && config.log.response(response);\r\n                return response;\r\n            },\r\n            (error) => {\r\n                config.log && config.log.responseError && config.log.responseError(error);\r\n                this.handleResponseError(error, error.response.status);\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Execute an HTTP(s) request\r\n     * @param method \"GET\", \"POST\" or \"PUT\" http method to use\r\n     * @param uri path to request\r\n     * @param headerParams parameters to be sent in http headers\r\n     * @param bodyParam the body to send (javascript Object, converted to Json)\r\n     * @returns On success: a Promise with .data, .status and headers. On error: an AxiosError\r\n     */\r\n    request(method, uri, headerParams, bodyParam) {\r\n        return this.axios.request({\r\n            method: method,\r\n            url: uri,\r\n            headers: headerParams,\r\n            data: bodyParam,\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = AxiosConnection;\r\n","\r\nfunction populateUri(uri, key, value) {\r\n    return uri.replace(\"{\" + key + \"}\", value);\r\n}\r\n\r\nmodule.exports = { populateUri };\r\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\n\"use strict\";\n\nconst PurchaseOperationResponse = require(\"../model/PurchaseOperationResponse\");\nconst { populateUri } = require(\"../util/ApiHelper\");\n\n/**\n * @class PurchaseLifecycleApi\n *\n *\n */\nclass PurchaseLifecycleApi {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n\n    /**\n     * Query for a purchase for a given purchaseId.\n     * PurchaseLifecycle endpoints always return the same object with the latest state of the purchase and different fields populated.PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null.\n     *\n     * @param purchaseId PurchaseId received from initializePurchase or authorizePurchase response.\n     * @param authorization The access token received from the initialize request. Provide this for client-side requests in the Bearer format.\n     * @return { Promise<PurchaseOperationResponse> } a Promise that will return a PurchaseOperationResponse.\n     */\n    getPurchase(purchaseId, authorization) {\n        const uri = populateUri(\"/purchase/info/{purchaseId}\", [\"purchaseId\"], [purchaseId]);\n\n        const headerParams = {\n            Authorization: authorization,\n        };\n\n        return this.communicator.execute(\"GET\", uri, headerParams, null).then((r) => PurchaseOperationResponse.constructFromObject(r.data));\n    }\n}\n\nmodule.exports = PurchaseLifecycleApi;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\n/**\n * Method with which the end user is redirected to the Instore Selfservice application.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    SMS: \"SMS\",\n    URL: \"URL\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst MethodType = require(\"./MethodType\");\n\nclass AuthorizePurchaseRequest {\n    /**\n     * Constructor for all fields required by the object.\n     * @param { String } purchaseId\n     * @param { MethodType } method\n     */\n    constructor(purchaseId, method) {\n        this.purchaseId = ModelHelper.validatePrimitive(purchaseId, \"string\");\n        this.method = ModelHelper.validateEnum(method, MethodType, \"MethodType\");\n    }\n\n    /**\n     * PurchaseId received from initializePurchase or authorizePurchase response.\n     * @returns { String }\n     */\n    getPurchaseId() {\n        return this.purchaseId;\n    }\n    /**\n     * PurchaseId received from initializePurchase or authorizePurchase response.\n     * @param { String } purchaseId\n     */\n    setPurchaseId(purchaseId) {\n        this.purchaseId = ModelHelper.validatePrimitive(purchaseId, \"string\");\n    }\n    /**\n     * PurchaseId received from initializePurchase or authorizePurchase response.\n     * @param { String } val\n     */\n    withPurchaseId(val) {\n        this.setPurchaseId(val);\n        return this;\n    }\n\n    /**\n     * If method 'SMS' is chosen, a phone number must be provided and will receive a message to start the verify process.\n     * @returns { String }\n     */\n    getPhone() {\n        return this.phone;\n    }\n    /**\n     * If method 'SMS' is chosen, a phone number must be provided and will receive a message to start the verify process.\n     * @param { String } phone\n     */\n    setPhone(phone) {\n        this.phone = ModelHelper.validatePrimitive(phone, \"string\");\n    }\n    /**\n     * If method 'SMS' is chosen, a phone number must be provided and will receive a message to start the verify process.\n     * @param { String } val\n     */\n    withPhone(val) {\n        this.setPhone(val);\n        return this;\n    }\n\n    /**\n     * @returns { MethodType }\n     */\n    getMethod() {\n        return this.method;\n    }\n    /**\n     * @param { MethodType } method\n     */\n    setMethod(method) {\n        this.method = ModelHelper.validateEnum(method, MethodType, \"MethodType\");\n    }\n    /**\n     * @param { MethodType } val\n     */\n    withMethod(val) {\n        this.setMethod(val);\n        return this;\n    }\n\n    /**\n     * Redirect URL for the merchant after finishing the flow.\n     * @returns { String }\n     */\n    getSuccessUrl() {\n        return this.successUrl;\n    }\n    /**\n     * Redirect URL for the merchant after finishing the flow.\n     * @param { String } successUrl\n     */\n    setSuccessUrl(successUrl) {\n        this.successUrl = ModelHelper.validatePrimitive(successUrl, \"string\");\n    }\n    /**\n     * Redirect URL for the merchant after finishing the flow.\n     * @param { String } val\n     */\n    withSuccessUrl(val) {\n        this.setSuccessUrl(val);\n        return this;\n    }\n\n    /**\n     * After successfully finishing the flow, this URL will receive a callback to indicate completion to the merchant.\n     * @returns { String }\n     */\n    getCallbackUrl() {\n        return this.callbackUrl;\n    }\n    /**\n     * After successfully finishing the flow, this URL will receive a callback to indicate completion to the merchant.\n     * @param { String } callbackUrl\n     */\n    setCallbackUrl(callbackUrl) {\n        this.callbackUrl = ModelHelper.validatePrimitive(callbackUrl, \"string\");\n    }\n    /**\n     * After successfully finishing the flow, this URL will receive a callback to indicate completion to the merchant.\n     * @param { String } val\n     */\n    withCallbackUrl(val) {\n        this.setCallbackUrl(val);\n        return this;\n    }\n\n    /**\n     * @returns { AuthorizePurchaseRequest }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        const purchaseId = ModelHelper.convertToType(data[\"purchaseId\"], String);\n        const method = ModelHelper.convertToType(data[\"method\"], MethodType);\n        return new AuthorizePurchaseRequest(purchaseId, method)\n            .withPhone(ModelHelper.convertToType(data[\"phone\"], String))\n            .withSuccessUrl(ModelHelper.convertToType(data[\"successUrl\"], String))\n            .withCallbackUrl(ModelHelper.convertToType(data[\"callbackUrl\"], String));\n    }\n}\n\nmodule.exports = AuthorizePurchaseRequest;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\n\"use strict\";\n\nconst AuthorizePurchaseRequest = require(\"../model/AuthorizePurchaseRequest\");\nconst PurchaseOperationResponse = require(\"../model/PurchaseOperationResponse\");\nconst { populateUri } = require(\"../util/ApiHelper\");\n\n/**\n * @class PurchaseAuthorizationApi\n *\n *\n */\nclass PurchaseAuthorizationApi {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n\n    /**\n     * Authorize a consumer to complete a transaction with our hosted solution. Can be started via SMS or URL.\n     * PurchaseAuthorization endpoints always return the same object with different state of the purchase and different fields populated. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null. PurchaseLifecycle endpoints also return the same object when an error occurs. The purchase object however will be null.\n     *\n     * @param authorizePurchaseRequest Contains everything needed to start the Authorization Process.\n     * @param authorization The access token received from the initialize request. Provide this for client-side requests in the Bearer format.\n     * @return { Promise<PurchaseOperationResponse> } a Promise that will return a PurchaseOperationResponse.\n     */\n    authorizePayLater(authorizePurchaseRequest, authorization) {\n        const uri = \"/purchase/authorize/paylater\";\n        const request =\n            authorizePurchaseRequest instanceof AuthorizePurchaseRequest\n                ? authorizePurchaseRequest\n                : AuthorizePurchaseRequest.constructFromObject(authorizePurchaseRequest);\n\n        const headerParams = {\n            Authorization: authorization,\n        };\n\n        return this.communicator\n            .execute(\"POST\", uri, headerParams, authorizePurchaseRequest)\n            .then((r) => PurchaseOperationResponse.constructFromObject(r.data));\n    }\n}\n\nmodule.exports = PurchaseAuthorizationApi;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\n\"use strict\";\n\nconst { populateUri } = require(\"../util/ApiHelper\");\n\n/**\n * @class LegalDocumentsApi\n *\n *\n */\nclass LegalDocumentsApi {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n\n    /**\n     * Generates a terms-and-conditions document in html format.\n     * Terms and conditions in HTML format.\n     *\n     * @param purchaseId The purchaseId received from the initialize request that started the verification process.\n     * @param authorization The access token received from the initialize request. Provide this for client-side requests in the Bearer format.\n     * @return { Promise<String> } a Promise that will return a String.\n     */\n    getTermsAndConditions(purchaseId, authorization) {\n        const uri = populateUri(\"/purchase/legaldocuments/termsandconditions/{purchaseId}\", [\"purchaseId\"], [purchaseId]);\n\n        const headerParams = {\n            Authorization: authorization,\n        };\n\n        return this.communicator.execute(\"GET\", uri, headerParams, null).then((r) => r.data);\n    }\n}\n\nmodule.exports = LegalDocumentsApi;\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ValidationException = require(\"../exceptions/ValidationException\");\n\nmodule.exports = Object.freeze({\n    DHL: \"DHL\",\n    POST: \"POST\",\n    DPD: \"DPD\",\n    GLS: \"GLS\",\n    constructFromObject: function (data) {\n        if (data === null || data === undefined || this.hasOwnProperty(data)) {\n            return data;\n        }\n        throw new ValidationException(`Could not find '${data}' in String.`);\n    },\n});\n","/**\n * Purchase API\n * @copyright Copyright (c) 2020 Unzer Pay Later\n * @license see LICENSE.TXT\n *\n * This class is based on the Unzer Pay Later OpenAPI specification, version 1.0.0.\n */\n\nconst ModelHelper = require(\"../util/ModelHelper\");\nconst LogisticsProvider = require(\"./LogisticsProvider\");\n\nclass DeliveryInformation {\n    /**\n     * @returns { Date }\n     */\n    getExpectedShippingDate() {\n        return new Date(this.expectedShippingDate);\n    }\n    /**\n     * @param { Date } expectedShippingDate\n     */\n    setExpectedShippingDate(expectedShippingDate) {\n        this.expectedShippingDate = ModelHelper.validateDate(expectedShippingDate);\n    }\n    /**\n     * @param { Date } val\n     */\n    withExpectedShippingDate(val) {\n        this.setExpectedShippingDate(val);\n        return this;\n    }\n\n    /**\n     * @returns { LogisticsProvider }\n     */\n    getLogisticsProvider() {\n        return this.logisticsProvider;\n    }\n    /**\n     * @param { LogisticsProvider } logisticsProvider\n     */\n    setLogisticsProvider(logisticsProvider) {\n        this.logisticsProvider = ModelHelper.validateEnum(logisticsProvider, LogisticsProvider, \"LogisticsProvider\");\n    }\n    /**\n     * @param { LogisticsProvider } val\n     */\n    withLogisticsProvider(val) {\n        this.setLogisticsProvider(val);\n        return this;\n    }\n\n    /**\n     * The tracking number of the logistics provider.\n     * @returns { String }\n     */\n    getTrackingNumber() {\n        return this.trackingNumber;\n    }\n    /**\n     * The tracking number of the logistics provider.\n     * @param { String } trackingNumber\n     */\n    setTrackingNumber(trackingNumber) {\n        this.trackingNumber = ModelHelper.validatePrimitive(trackingNumber, \"string\");\n    }\n    /**\n     * The tracking number of the logistics provider.\n     * @param { String } val\n     */\n    withTrackingNumber(val) {\n        this.setTrackingNumber(val);\n        return this;\n    }\n\n    /**\n     * @returns { DeliveryInformation }\n     */\n    static constructFromObject(data) {\n        if (!data) return undefined;\n        return new DeliveryInformation()\n            .withExpectedShippingDate(ModelHelper.convertToType(data[\"expectedShippingDate\"], Date))\n            .withLogisticsProvider(ModelHelper.convertToType(data[\"logisticsProvider\"], LogisticsProvider))\n            .withTrackingNumber(ModelHelper.convertToType(data[\"trackingNumber\"], String));\n    }\n}\n\nmodule.exports = DeliveryInformation;\n","/**\r\n * Implementation blueprint for a Logger object.\r\n */\r\nclass Logger {\r\n    static request(req) {};\r\n    static requestError(e) {};\r\n    static response(resp) {};\r\n    static responseError(e) {};\r\n}\r\n\r\nmodule.exports = Logger;","const Logger = require(\"./Logger\");\r\n\r\nclass ConsoleLogger extends Logger {\r\n\r\n    static request(req) {\r\n        console.log(\"Unzer request: \", req);\r\n    }\r\n\r\n    static requestError(err) {\r\n        console.error(\"Unzer request error: \", err);\r\n    }\r\n    static response(resp) {\r\n        console.log(\"Unzer response: \", resp);\r\n    }\r\n    static responseError(err) {\r\n        console.error(\"Unzer response error: \", err);\r\n    }\r\n}\r\n\r\nmodule.exports = ConsoleLogger;","exports.Communicator = require(\"./communication/Communicator\");\r\n\r\nexports.AxiosConnection = require(\"./connection/AxiosConnection\");\r\nexports.BaseConnection = require(\"./connection/BaseConnection\");\r\n\r\nexports.PurchaseLifecycleApi = require(\"./api/PurchaseLifecycleApi\");\r\nexports.PurchaseAuthorizationApi = require(\"./api/PurchaseAuthorizationApi\");\r\nexports.LegalDocumentsApi = require(\"./api/LegalDocumentsApi\");\r\n\r\nexports.exceptions = {\r\n    ApiException: require(\"./exceptions/ApiException\"),\r\n    AuthorizationException: require(\"./exceptions/AuthorizationException\"),\r\n    UnzerException: require(\"./exceptions/UnzerException\"),\r\n    ReferenceException: require(\"./exceptions/ReferenceException\"),\r\n    ValidationException: require(\"./exceptions/ValidationException\"),\r\n}\r\n\r\nexports.models = {\r\n    Account: require(\"./model/Account\"),\r\n    Ach: require(\"./model/Ach\"),\r\n    AchAccountType: require(\"./model/AchAccountType\"),\r\n    Address: require(\"./model/Address\"),\r\n    Amount: require(\"./model/Amount\"),\r\n    AuthorizePurchaseRequest: require(\"./model/AuthorizePurchaseRequest\"),\r\n    Bacs: require(\"./model/Bacs\"),\r\n    Company: require(\"./model/Company\"),\r\n    Consumer: require(\"./model/Consumer\"),\r\n    ConsumerVerification: require(\"./model/ConsumerVerification\"),\r\n    Contract: require(\"./model/Contract\"),\r\n    Country: require(\"./model/Country\"),\r\n    Currency: require(\"./model/Currency\"),\r\n    DeliveryAddress: require(\"./model/DeliveryAddress\"),\r\n    DeliveryInformation: require(\"./model/DeliveryInformation\"),\r\n    DeliveryType: require(\"./model/DeliveryType\"),\r\n    Document: require(\"./model/Document\"),\r\n    DocumentType: require(\"./model/DocumentType\"),\r\n    Eft: require(\"./model/Eft\"),\r\n    Language: require(\"./model/Language\"),\r\n    LogisticsProvider: require(\"./model/LogisticsProvider\"),\r\n    MerchantReference: require(\"./model/MerchantReference\"),\r\n    MethodType: require(\"./model/MethodType\"),\r\n    Occupation: require(\"./model/Occupation\"),\r\n    OperationInformation: require(\"./model/OperationInformation\"),\r\n    OperationResult: require(\"./model/OperationResult\"),\r\n    OperationStatus: require(\"./model/OperationStatus\"),\r\n    Payment: require(\"./model/Payment\"),\r\n    PaymentInformation: require(\"./model/PaymentInformation\"),\r\n    PaymentMethod: require(\"./model/PaymentMethod\"),\r\n    PaymentOption: require(\"./model/PaymentOption\"),\r\n    Person: require(\"./model/Person\"),\r\n    ProductType: require(\"./model/ProductType\"),\r\n    PurchaseInformation: require(\"./model/PurchaseInformation\"),\r\n    PurchaseOperationResponse: require(\"./model/PurchaseOperationResponse\"),\r\n    PurchaseState: require(\"./model/PurchaseState\"),\r\n    Sepa: require(\"./model/Sepa\"),\r\n};\r\n\r\nexports.logging = {\r\n    Logger: require(\"./logging/Logger\"),\r\n    ConsoleLogger: require(\"./logging/ConsoleLogger\"),\r\n};\r\n"],"names":["[object Object]","connection","Error","request","Function","this","method","uri","headerParams","bodyParam","then","data","status","headers","fn","thisArg","args","Array","arguments","length","i","apply","toString","Object","prototype","isArray","val","call","isUndefined","isObject","isFunction","forEach","obj","l","key","hasOwnProperty","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","deepMerge","extend","a","b","bind","trim","str","replace","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","utils","parts","v","toISOString","JSON","stringify","push","join","hashmarkIndex","indexOf","slice","InterceptorManager","handlers","use","fulfilled","rejected","eject","id","h","fns","value","__CANCEL__","normalizedName","name","toUpperCase","message","config","code","response","error","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","stack","enhanceError","ignoreDuplicateOf","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","parsed","write","expires","path","domain","secure","cookie","Date","toGMTString","read","match","RegExp","decodeURIComponent","remove","now","Promise","resolve","reject","requestData","requestHeaders","XMLHttpRequest","auth","username","password","Authorization","btoa","baseURL","requestedURL","fullPath","relativeURL","combineURLs","open","buildURL","timeout","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","split","line","substr","toLowerCase","concat","responseType","responseText","statusText","validateStatus","createError","settle","onabort","onerror","ontimeout","timeoutErrorMessage","cookies","require$$0","xsrfValue","withCredentials","isURLSameOrigin","xsrfCookieName","undefined","xsrfHeaderName","setRequestHeader","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","defaults","process","transformRequest","normalizeHeaderName","transformResponse","parse","maxContentLength","common","Accept","throwIfCancellationRequested","throwIfRequested","transformData","reason","isCancel","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","axiosKeys","otherKeys","keys","filter","Axios","instanceConfig","interceptors","mergeConfig","chain","dispatchRequest","interceptor","unshift","shift","getUri","Cancel","CancelToken","executor","TypeError","resolvePromise","token","source","c","createInstance","defaultConfig","context","instance","axios","create","require$$1","require$$2","all","promises","spread","callback","arr","ApiException","responseStatus","operationResult","super","validatePrimitiveOrObject","valueType","ModelHelper","validatePrimitive","validateObject","formatDate","month","getMonth","padStart","day","getDate","getFullYear","type","Boolean","Number","parseFloat","String","parseDate","Blob","constructFromObject","itemType","map","item","convertToType","parseArray","keyType","k","parseObject","typeName","ValidationException","validateEnum","enumType","enumTypeName","objectType","date","isNaN","freeze","OK","NOK","ERROR","PENDING","UNKNOWN","OperationResult","operationId","setOperationId","OperationStatus","setStatus","statusCode","setStatusCode","statusMessage","setStatusMessage","processingStart","validateDate","setProcessingStart","processingEnd","setProcessingEnd","withOperationId","withStatus","withStatusCode","withStatusMessage","withProcessingStart","withProcessingEnd","EUR","CHF","USD","CAD","GBP","Amount","amount","currency","Currency","setAmount","setCurrency","SAVINGS","CHECKING","Ach","accountNumber","setAccountNumber","accountType","AchAccountType","setAccountType","routingNumber","setRoutingNumber","withAccountNumber","withAccountType","withRoutingNumber","Bacs","sortCode","setSortCode","withSortCode","AT","DE","CH","NL","Eft","transitNumber","setTransitNumber","institutionId","setInstitutionId","withTransitNumber","withInstitutionId","Sepa","iban","setIban","bic","setBic","withIban","withBic","Account","holder","setHolder","country","Country","setCountry","sepa","setSepa","eft","setEft","ach","setAch","bacs","setBacs","withHolder","withCountry","withSepa","withEft","withAch","withBacs","Address","street","setStreet","houseNumber","setHouseNumber","additionalInfo","setAdditionalInfo","zipCode","setZipCode","city","setCity","countryCode","setCountryCode","state","setState","withStreet","withHouseNumber","withAdditionalInfo","withZipCode","withCity","withCountryCode","withState","Company","firstName","setFirstName","lastName","setLastName","companyName","setCompanyName","withFirstName","withLastName","withCompanyName","DeliveryAddress","address","setAddress","withAddress","BILLING_ADDRESS","ALTERNATIVE_DELIVERY_ADDRESS","SHOP_PICKUP","POST_OFFICE_PICKUP","EN","Occupation","setName","yearlyGrossSalary","setYearlyGrossSalary","employersName","setEmployersName","employersAddress","setEmployersAddress","withName","withYearlyGrossSalary","withEmployersName","withEmployersAddress","Person","salutation","setSalutation","birthdate","setBirthdate","socialId","setSocialId","occupation","setOccupation","withSalutation","withBirthdate","withSocialId","withOccupation","Consumer","person","setPerson","company","setCompany","bankAccount","setBankAccount","billingAddress","setBillingAddress","deliveryAddress","setDeliveryAddress","deliveryType","DeliveryType","setDeliveryType","language","Language","setLanguage","phone","setPhone","email","setEmail","withPerson","withCompany","withBankAccount","withBillingAddress","withDeliveryAddress","withDeliveryType","withLanguage","withPhone","withEmail","ConsumerVerification","initializeUrl","setInitializeUrl","verifyUrl","setVerifyUrl","consumerDataAvailable","validateBoolean","setConsumerDataAvailable","withInitializeUrl","withVerifyUrl","withConsumerDataAvailable","Document","setUrl","withUrl","MerchantReference","orderId","setOrderId","customerId","setCustomerId","invoiceId","setInvoiceId","withOrderId","withCustomerId","withInvoiceId","OperationInformation","processingDate","setProcessingDate","operationAmount","setOperationAmount","withProcessingDate","withOperationAmount","DIRECT_DEBIT","BANK_TRANSFER","HTML","PDF","Contract","DocumentType","setType","setId","withType","withId","Payment","dueDate","setDueDate","paymentAmount","setPaymentAmount","withDueDate","withPaymentAmount","INVOICE","INSTALLMENT","MONTHLY_INVOICE","PaymentOption","optionId","setOptionId","consumerCountry","setConsumerCountry","productType","ProductType","setProductType","supportedPaymentMethods","validateArrayEnum","PaymentMethod","setSupportedPaymentMethods","totalAmount","setTotalAmount","purchaseAmount","setPurchaseAmount","interestRate","setInterestRate","effectiveInterestRate","setEffectiveInterestRate","numberOfPayments","setNumberOfPayments","payments","validateArray","setPayments","contracts","setContracts","withOptionId","withConsumerCountry","withCurrency","withProductType","withSupportedPaymentMethods","withTotalAmount","withPurchaseAmount","withInterestRate","withEffectiveInterestRate","withNumberOfPayments","withPayments","withContracts","PaymentInformation","paymentReference","setPaymentReference","account","setAccount","paymentMethod","setPaymentMethod","confirmedPaymentOption","setConfirmedPaymentOption","withPaymentReference","withAccount","withPaymentMethod","withConfirmedPaymentOption","INITIALIZED","PRECHECKED","DECLINED","AUTHORIZED","AUTHORIZATION_PENDING","CANCELLED","FULFILLMENT","BLOCKED","TIMED_OUT","CLOSED","PurchaseInformation","purchaseId","setPurchaseId","PurchaseState","authorizedAmount","setAuthorizedAmount","capturedAmount","setCapturedAmount","remainingCaptureAmount","setRemainingCaptureAmount","refundedAmount","setRefundedAmount","remainingRefundableAmount","setRemainingRefundableAmount","consumer","setConsumer","consumerVerification","setConsumerVerification","merchantReference","setMerchantReference","paymentInformation","setPaymentInformation","paymentOptions","setPaymentOptions","captures","setCaptures","refunds","setRefunds","documents","setDocuments","metaData","validateMap","setMetaData","withPurchaseId","withAuthorizedAmount","withCapturedAmount","withRemainingCaptureAmount","withRefundedAmount","withRemainingRefundableAmount","withConsumer","withConsumerVerification","withMerchantReference","withPaymentInformation","withPaymentOptions","withCaptures","withRefunds","withDocuments","withMetaData","PurchaseOperationResponse","setResult","purchase","setPurchase","withResult","withPurchase","operationResponse","getResult","AuthorizationException","ReferenceException","UnzerException","default","BaseConnection","log","req","assign","requestError","handleRequestError","resp","responseError","handleResponseError","populateUri","communicator","authorization","execute","r","SMS","URL","AuthorizePurchaseRequest","MethodType","setMethod","successUrl","setSuccessUrl","callbackUrl","setCallbackUrl","withSuccessUrl","withCallbackUrl","authorizePurchaseRequest","DHL","POST","DPD","GLS","DeliveryInformation","expectedShippingDate","setExpectedShippingDate","logisticsProvider","LogisticsProvider","setLogisticsProvider","trackingNumber","setTrackingNumber","withExpectedShippingDate","withLogisticsProvider","withTrackingNumber","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","require$$44","require$$45","require$$46","require$$47","Logger","require$$48","ConsoleLogger","console","err"],"mappings":"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"}